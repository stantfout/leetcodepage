{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["从3月初开始刷leetcode，刷了有200+题，但一直没有总结题解。有时候刷题的过程中有些思想明明以前用到过，但就是想不起来，看来还是要总结题解的。","写题解的主要目的是方便自己以后再次查看和复习，所以题解的只是以自己能理解这个题为标准，如果有幸能帮助到你，那么就更好了。","菜鸡刷题日记"],"part1/":["#","1","100","leetcod"],"part1/1. 两数之和.html":["(int","+","0;","1.","2.","=","==","for(int","hashmap<>();","int","int[]","map","n","new","num","nums,","nums.length;","nums[i]即可。如果存在，直接返回，不存在则往hash表中put进nums[i]，表示之前已经出现过值为nums[i]的数。","nums[j]","public","target)","target。但时间复杂度为o(n^2)。","target，请你在该数组中找出和为目标值的那","twosum(int[]","{","两个","两数之和","但我们可以通过建立hash表，当读取到一个数nums[i]时，我们判断hash表里是否存在target","你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。","和一个目标值","思路","整数，并返回他们的数组下标。","最简单的想法是通过两个for循环遍历数组，判断nums[i]","给定一个整数数组","题目描述","题目描述2."],"part1/2. 两数相加.html":["!=","%","(l1","(l2","+=","/","0","0;","1);","1.","10);","10;","2.",":","=","==","?","addtwonumbers(listnod","flag","flag;","head","head.next;","head;","int","l1","l1,","l1.next;","l1.val;","l2","l2)","l2.next;","l2.val;","listnod","listnode(","listnode(flag);","listnode(v","new","null","null)","pre","pre.next","pre.next;","public","return","val","{","||","}","一位","两数相加","之外，这两个数都不会以","基本的链表操作，遍历链表，处理好进位问题就好了。注意循环的退出条件，以及最后也要对flag进行判断。","如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。","开头。","思路","您可以假设除了数字","数字。","的方式存储的，并且它们的每个节点只能存储","的链表用来表示两个非负的整数。其中，它们各自的位数是按照","给出两个","逆序","非空","题目描述","题目描述2."],"part1/3. 无重复字符的最长子串.html":["(j","(s.length()","0)","0;","1.","1;","2.","3.","=","==","count","hash","hash[s.charat(i)]","int","int[128];","int[]","j","lengthoflongestsubstring(str","new","public","return","s)","s.charat(j)为止。返回这个过程中滑动窗口的最大长度即为答案。","{","}","判断是否存在重复字符可以用hash表的方式判断，即当前字符是否在hash表中出现过，同时当i往前移动时也要更新好hash表即可。因为i，j都不会回退，最大为n，算法整体复杂度为o(n)。","思路","无重复字符的最长子串","最长子串","的长度。","给定一个字符串，请你找出其中不含有重复字符的","维护一个滑动窗口[i,j]，如果[i,j]中不存在重复字符，则j++，如果存在重复字符，则重复字符一定为s.charat(j),则i++一直到s.charat(i)","题目描述","题目描述2."],"part1/4. 寻找两个正序数组的中位数.html":["(getkth(nums1,","(index1","(index2","(n","*","+","/","0,","0.5;","1","1)","1));","1,","1,end1,nums2,start2,end2,k","1,end2,k","1.","1;","2","2)","2.","2;","4.",":","=",">","?","doubl","end1","end1,","end2","end2,","findmediansortedarrays(int[]","getkth(int[]","getkth(nums1,","getkth(nums1,index1","getkth(nums1,start1,end1,nums2,index2","getkth(nums2,start2,end2,nums1,start1,end1,k);","if(len1","if(nums1[index1]","index2","int","int[]","k","k)","left","left)","len1","len2","len2)","m","n","n))。","nums1","nums1,","nums1.length;","nums2","nums2)","nums2,","nums2.length;","nums2[index2])","nums2。","o(log(m","privat","public","return","right","right))","start1","start1,","start2","start2,","{","}","不会同时为空。","你可以假设","和","寻找两个正序数组的中位数","思路","的正序（从小到大）数组","给定两个大小为","请你找出这两个正序数组的中位数，并且要求算法的时间复杂度为","这个题目简直是我刷题以来的噩梦，作为leetcode的第4个题目，这难度是要劝退刚刚刷题的萌新(我)啊！当初自己想不出最优解，看了一眼题解后还是不明白，深入研究了一会勉强理解了题解，但自己写代码还是写不出来，要处理的细节太多了，对着别人的代码磕磕绊绊的写完了。如今自己写题解...还是不会啊！刷leetcode以来最有阴影的题目！这题以后有时间再补题解吧，就贴个代码先。","题目描述","题目描述2."],"part1/5. 最长回文子串.html":["\"\";","&&","(n","(s.length()","+","0","1,","1.","1000。","2.","2.1.","2.2.","5.",":","=","?","dp(i,j)表示字符串s(i,j)是否为回文串。","int","j","j)","longestpalindrome(str","maxlength","n","public","s","s)","s.length();","str.substring(i","string","s，找到","{","}","中心扩展法","中最长的回文子串。你可以假设","动态规划","动态规划2.2.","思路","思路2.1.","最长回文子串","的最大长度为","给定一个字符串","题目描述","题目描述2."],"part1/25. K 个一组翻转链表.html":["!=","&&","(!stack.isempty())","(head","(int","(k","(true)","//pre用于完成对反转后链表的连接，默认先指向head，考虑整个链表都不反转的情况","//res用于最后返回","//开始找k个节点后的尾节点","//特判","0","0)","1);","1.","1;","2","2.","25.","3",";","=","==",">1",">2",">3",">4",">5","an","end","end;","head,","head;","int","k","k)","k;","listnod","listnode(","new","node","node.next","node.next;","node;","null)","null;","pre","pre.next","pre.next;","pre;","public","re","ret","ret;","return","reversekgroup(listnod","reversekgroup(pre,ans);","stack","stack.add(pre);","stack.pop();","stack<>();","start","{","}","个一组翻转链表","个节点一组进行翻转，请你返回翻转后的链表。","你不能只是单纯的改变节点内部的值，而是需要实际进行节点交换。","你的算法只能使用常数的额外空间。","如果不借助额外空间，我们需要单独实现一个函数，能够以o(1)的空间复杂度完成反转，也是一个基本的链表操作，可以参考leetcode206题。emmmm总的来说还是基本的链表操作，难度都不大，但整合到一块就难了，细节上要注意好，代码如下：","如果不考虑空间复杂度，则可以利用栈+递归轻松完成反转:","如果节点总数不是","当","思路","时，应当返回:","是一个正整数，它的值小于或等于链表的长度。","的整数倍，那么请将最后剩余的节点保持原有顺序。","示例：","给你一个链表，每","给你这个链表：1","说明：","题目描述","题目描述2."],"part2/":["101","200","leetcod"],"part2/136. 只出现一次的数字.html":["(int","0;","1.","136.","2.","=","int","nums)","public","re","singlenumber(int[]","{","你可以不使用额外空间来实现吗？","你的算法应该具有线性时间复杂度。","利用数组的特性，异或操作解决这个问题。","只出现一次的数字","思路","给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","说明：","题目描述","题目描述2."],"part2/146. LRU缓存机制.html":["(!map.containskey(key))","(key)","(list.siz","(list.size()","(map.containskey(key))","(最近最少使用)","0.75f,","0;","1);","1.","146.","1;","1。","2.",";","=",">",">=","@overrid","addfirst(nod","boolean","capacity)","capacity;","class","eldest)","extend","get(int","get(key)","get操作如果要达到o(1)的时间复杂度还是比较简单的，只需要通过map数据结构存储，可以通过查找key在o(1)时间复杂度里找到对应的value。","hashmap<>();","head","head.next","head.next.prev","head.next;","head;","int","key)","key,","key;","linkedhashmap{","linkedlist","linkedlist<>();","list","list.addfirst(node);","list.remove(node);","list;","lru","lrucach","lrucache(int","lru缓存机制","map","map.get(key);","map.put(key,","map.put(key,node);","map.remove(list.removelast().key);","map;","new","next","next.prev","next;","node","node()","node();","node(int","node(key,","node)","node);","node.next","node.next;","node.prev","node.prev;","node.valu","node.value;","node;","nodelist","nodelist()","nodelist();","null;","o(1)","prev","prev,","prev.next","prev;","privat","protect","public","put","put(int","put(key,","put操作面临的主要问题是，如果只使用map数据结构存储，当缓存容量达到上限后，不容易删除最久未使用的数据。如果此时能维护一个类似于优先队列的数据结构，把队列中最久未使用的数据删除就比较容易了。","remove(nod","remove(node);","removeeldestentry(map.entri","removelast()","return","size","size()","size++;","size;","super(capacity,","super.getordefault(key,","super.put(key,","tail","tail.prev","tail.prev;","tail;","this.capac","this.key","this.valu","true);","value)","value);","value;","void","{","}","。","但是啊，这样写在leetcode的执行用时还是比较大的...后来知道了，java中有一个linkedhashmap的数据结构可以很方便的解决这个问题。linkedhashmap里面的结点自带一个前驱指针和后继指针，维护了一个链表。","你是否可以在","写入数据","和","如果密钥","如果密钥已经存在，则变更其数据值；如果密钥不存在，则插入该组「密钥/数据值」。当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值，从而为新的数据值留出空间。","存在于缓存中，则获取密钥的值（总是正数），否则返回","思路","所以最后采用的是hashmap+linkedlist来存储数据，put操作时，把数据存储到hashmap和linkedlist中，其中linkedlist存储到链表头部，如果要删除最久未使用数据时，则删除链表尾部的数据即可。get操作直接从hashmap中取数据，然后更新链表中对应数据的顺序即可。","时间复杂度内完成这两种操作？","最后，还有一个参考了大佬的代码后手写的lru算法...直接看代码吧","缓存机制。它应该支持以下操作：","获取数据","运用你所掌握的数据结构，设计和实现一个","进阶:","题目描述","题目描述2."],"part3/":["#","201","300","leetcod"],"part3/206. 反转链表.html":["!=","(root","1","1.","2.","2.1.","2.2.","206.","5","=","==",">1",">2",">3",">4",">5",">null","head)","head.next","head;","if(head","listnod","next","next;","null","null)","null;","pre","pre.next","pre;","privat","public","re","res;","return","reverse(head);","reverse(head.next);","reverse(listnod","reverselist(listnod","root","root.next","root.next;","root;","{","||","}","你可以迭代或递归地反转链表。你能否用两种方法解决这道题？","反转一个单链表。","反转链表","思路","思路2.1.","示例:","输入:","输出:","进阶:","迭代写法：","迭代写法：2.2.","递归写法：","题目描述","题目描述2."],"part3/210. 课程表 II.html":["();","(int","(int[]","(numcours","0","0)","0;","1","1.","1。","2.","210.",":","=","==","[0,1]","findorder(int","ii","indegre","indegrees[p[0]]++;","int[0];","int[]","int[][]","int[numcourses];","linkedlist<>","n","new","numcourses,","p","prerequisites)","public","queue","return","{","}","例如，想要学习课程","到","可能会有多个正确的顺序，你只要返回一种就可以了。如果不可能完成所有课程，返回一个空数组。","在选修某些课程之前需要一些先修课程。","思路","现在你总共有","给定课程总量以及它们的先决条件，返回你为了学完所有课程所安排的学习顺序。","课程表","转换成一个拓扑排序的问题，维护一个入度表，每次把入度为0的节点推入队列，加入结果数组，然后维护入度表剩余节点的入度。","门课需要选，记为","题目描述","题目描述2.","，你需要先完成课程","，我们用一个匹配来表示他们:"],"part3/236. 二叉树的最近公共祖先.html":["!=","&&","(f1","(flag)","(re","(root","*/","/*","//剪枝一下","//右子树是否包含p,q中的一个","//如果root为null，直接返回fals","//如果root为p或者q,只需要root的左右子树中有一个包含p或q即可","//如果root节点等于p或q，或者它的左右子树包含过p或q，就返回true，否则返回fals","//寻找root的左右节点或者root本身是否包含p,q","//左子树是否包含p,q中的一个","//第一个为true的root节点即为结果，通过一个全局变量存储。","1.","2.","236.","=","==","boolean","dfs(root,","dfs(root.left,","dfs(root.right,p,","dfs(treenod","f1","f2","f2);","f2;","f3","false;","flag","lowestcommonancestor(treenod","null)","null;","p","p,","privat","public","p、q","p、q，最近公共祖先表示为一个结点","q","q)","q);","re","res;","return","root","root,","root;","root为p或q,它的左右子树中的一个为另一个节点。","root的左右子树分别包含p,q。","t","treenod","x","x，满足","{","||","}","为不同节点且均存在于给定的二叉树中。","二叉树的最近公共祖先","如果一个节点是这两个节点的最近公共祖先，那么这两个节点一定分别存在于它们最近公共祖先的左右子树里面。或者p，q这两个节点中一定有一个是它们的最近公共祖先。","思路","所有节点的值都是唯一的。","找到该树中两个指定节点的最近公共祖先。","是","最终判断为true的标准为","百度百科中最近公共祖先的定义为：“对于有根树","的两个结点","的深度尽可能大（一个节点也可以是它自己的祖先）。”","的祖先且","给定一个二叉树,","说明:","题目描述","题目描述2."],"part3/287. 寻找重复数.html":["(int","(judge(nums,mid))","(left","+","0;","1","1.","1;","1（因为[1,mid]一共有mid个数，而其中x出现了2次，所以是mid+1个数）。所以如果nums数组中，元素值在[1,mid]之间的个数小于等于mid，那么[left,mid]中一定不存在最终的答案，我们要从[mid","1，right]中寻找答案。同理反之从[left,mid]中寻找答案。所以judge函数如下：","2.","2.1.","287.","=",">","an","arr,","boolean","findduplicate(int[]","hashmap<>();","int","judge(int[]","left","map","mid","mid;","n","n;","new","nums)","nums.length","nums，其数字都在","n）。","n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。","o(1)","o(n2)","privat","public","return","right","right;","value)","{","}","。","。别想暴力解决这个问题！","不能更改原数组（假设数组是只读的）。","不能更改原数组（假设数组是只读的）。也就是说不能通过类似排序的方式解决这个问题","个整数的数组","之间（包括","也就是说，这个题目的答案肯定在1到n之间。既然答案的范围确定，我们是否可以通过二分查找的方法对答案范围进行二分搜索，然后进行一些判断不断缩小答案范围，最后答案范围为1后就可以返回结果了。","但以上解法还不是最优解法，本题还可以通过快慢指针解决，以后有时间再补。","但是啊，如果看一眼这个说明..这个题目还是很麻烦的。","到","只能使用额外的","和","如果我假装看不见说明的话&#x1f643;，那么建立一个hash表轻松解决这个问题。","寻找重复数","思路","思路2.1.","数组中只有一个重复的数字，但它可能不止重复出现一次。","数组中只有一个重复的数字，但它可能不止重复出现一次。这个倒无所谓...","时间复杂度小于","的空间。","的空间。不能用hash表了！","给定一个包含","说明：","那么我们接着分析题目：给定一个包含","那么重点就是进行怎样的判断了：我们思考一下，假设最终答案x出现了2次，且x在[1,mid]中，那么[1,mid]的个数一定为mid","题目描述","题目描述2.","首先分析一下说明的要求："],"part6/":["501","600","leetcod"],"part6/560. 和为K的子数组.html":["(int","+",",","//因为sum[i]","//建立sum数组","//所以需要给sum数组前添加一个元素0，确保可以判断到nums[0]","0;","1","1.","1000,","1000]","1]","1e7,","1e7]。","2","2.","20,000]。","560.",":","=","[","[1,","[1,0,2,0,0,0,1],","[1,1,1],","[1,1,3,3,3,3,4]","[1,1]","cnt","hashmap<>();","int","int[]","int[n];","j","k","k)","k即可确保nums[j","k，你需要找到该数组中和为","map","map.put(0,1);","n","new","num","nums,","nums.length;","nums[i]","nums[i]的和为k","public","re","subarraysum(int[]","sum","sum[j]","{","与","为两种不同的情况。","但这样复杂度太大了，然后想到处理子数组和时最常用的方法是建立一个前缀和数组sum。那么怎么利用这个前缀和数组优化复杂度呢？首先看一个样例","使sum[i]","其实没有必要提前建立sum数组，一趟for循环遍历也可以解决问题。代码如下","到","和为k。也就是说这个题转换成了在sum数组中找出两数之差为k的情况。和leetcode_1类似，通过建立hash表的方式可以o(n)时间复杂度解决这个问题。","和为k的子数组","对应的sum数组为","思路","我们只要从sum数组中，找出两个数","数组中元素的范围是","数组的长度为","的范围是","的连续的子数组的个数。","示例","给定一个整数数组和一个整数","表示nums[j","说明","输入:num","输出:","题目描述","题目描述2.","首先是想到暴力的思路，两层for循环遍历，枚举每一个子数组和是否等于k。时间复杂度为o(n^2)。","，且整数"],"others/":["other"],"others/和为S的连续正数序列.html":["%","(2","(a1","(int","(sum","*","+","/","//当(left","/=","0)","0;","1)","1.","1;","1;//滑动窗口[left,right]的和","2","2.","2.1.","2.2.","2;","=","==",">","a1","a1;","arr[0]","arr[]","arraylist<>();","class","findcontinuoussequence(int","good","int","int[][]","int[n];","left","left++;","left;","list","luck!","n","n)","n);","n++)","n;","new","public","re","right","solut","sum","target","target)","target已知，此时只要遍历a1或者遍历n，都可求得另一个的值，只要判断是否为正整数就可以判断是否存在答案。","{","}","初始滑动窗口大小为1，开始(left)为1，结束(right)为1，通过等差数列求和公式可以求得滑动窗口的和，与目标target进行比较，如果等于target，则创建一个数组保存答案，如果小于target则说明应该扩大滑动窗口的和，则增加right，如果大于target，则说明应该减少滑动窗口的和，则增加left。","化简得","和为s的连续正数序列","如果选择遍历a1，在求n的过程中要用到sqrt，如果遍历n,则不需要，所以选择遍历n。","小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为s的连续正数序列?","思路","思路2.1.","求和公式","滑动窗口(双指针)","滑动窗口(双指针)2.2.","通过求和公式来解","题目描述","题目描述2."],"competition/":["competit"]},"length":21},"tokenStore":{"root":{"0":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.028846153846153848},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.03333333333333333}},";":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.046511627906976744},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.06521739130434782},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.08333333333333333},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.023255813953488372},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.05442176870748299},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}},")":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.022727272727272728}}},".":{"5":{"docs":{},";":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"7":{"5":{"docs":{},"f":{"docs":{},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}},"docs":{}},"docs":{}}},"1":{"0":{"0":{"0":{"docs":{},"。":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}},",":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}},"docs":{"part1/":{"ref":"part1/","tf":3.333333333333333}}},"1":{"docs":{"part2/":{"ref":"part2/","tf":3.333333333333333}}},"docs":{},")":{"docs":{},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}},"3":{"6":{"docs":{},".":{"docs":{"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":5}}}},"docs":{}},"4":{"6":{"docs":{},".":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":5}}}},"docs":{}},"docs":{"part1/":{"ref":"part1/","tf":3.333333333333333},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.046511627906976744},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}},".":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":5.046511627906977},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.043478260869565216},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.08333333333333333},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.03333333333333333},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.022222222222222223},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}},")":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}},")":{"docs":{},";":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364}}}}},";":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.043478260869565216},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.022727272727272728},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.031007751937984496},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.02127659574468085}},"/":{"docs":{},"/":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},"的":{"docs":{},"和":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.022727272727272728},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}},"e":{"docs":{},"n":{"docs":{},"d":{"1":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"2":{"docs":{},",":{"docs":{},"k":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}},"docs":{}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"2":{"docs":{},",":{"docs":{},"k":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}},"docs":{}}}}},"。":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}},"（":{"docs":{},"因":{"docs":{},"为":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"一":{"docs":{},"共":{"docs":{},"有":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"而":{"docs":{},"其":{"docs":{},"中":{"docs":{},"x":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"是":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"+":{"1":{"docs":{},"个":{"docs":{},"数":{"docs":{},"）":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"如":{"docs":{},"果":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"元":{"docs":{},"素":{"docs":{},"值":{"docs":{},"在":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"小":{"docs":{},"于":{"docs":{},"等":{"docs":{},"于":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"中":{"docs":{},"一":{"docs":{},"定":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"最":{"docs":{},"终":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"要":{"docs":{},"从":{"docs":{},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"，":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"]":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{},"同":{"docs":{},"理":{"docs":{},"反":{"docs":{},"之":{"docs":{},"从":{"docs":{},"[":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"中":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{},"所":{"docs":{},"以":{"docs":{},"j":{"docs":{},"u":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"函":{"docs":{},"数":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}},"e":{"7":{"docs":{},",":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}},"]":{"docs":{},"。":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}},"docs":{}}},"2":{"0":{"0":{"docs":{"part2/":{"ref":"part2/","tf":3.333333333333333}}},"1":{"docs":{"part3/":{"ref":"part3/","tf":3.333333333333333}}},"6":{"docs":{},".":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":5}}}},"docs":{},",":{"0":{"0":{"0":{"docs":{},"]":{"docs":{},"。":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}},"docs":{}},"docs":{}},"docs":{}}},"1":{"0":{"docs":{},".":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":3.333333333333333}}}},"docs":{}},"3":{"6":{"docs":{},".":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":5}}}},"docs":{}},"5":{"docs":{},".":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":3.333333333333333}}}},"8":{"7":{"docs":{},".":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":5}}}},"docs":{}},"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.017045454545454544},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.02040816326530612},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.03546099290780142}},".":{"1":{"docs":{},".":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"2":{"docs":{},".":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":5.009615384615385},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}},")":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},";":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"3":{"0":{"0":{"docs":{"part3/":{"ref":"part3/","tf":3.333333333333333}}},"docs":{}},"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}},".":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":5}}}},"4":{"docs":{},".":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":5}}}},"5":{"0":{"1":{"docs":{"part6/":{"ref":"part6/","tf":3.333333333333333}}},"docs":{}},"6":{"0":{"docs":{},".":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":5}}}},"docs":{}},"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}},".":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":5}}}},"6":{"0":{"0":{"docs":{"part6/":{"ref":"part6/","tf":3.333333333333333}}},"docs":{}},"docs":{}},"docs":{},"从":{"3":{"docs":{},"月":{"docs":{},"初":{"docs":{},"开":{"docs":{},"始":{"docs":{},"刷":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"，":{"docs":{},"刷":{"docs":{},"了":{"docs":{},"有":{"2":{"0":{"0":{"docs":{},"+":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"一":{"docs":{},"直":{"docs":{},"没":{"docs":{},"有":{"docs":{},"总":{"docs":{},"结":{"docs":{},"题":{"docs":{},"解":{"docs":{},"。":{"docs":{},"有":{"docs":{},"时":{"docs":{},"候":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"有":{"docs":{},"些":{"docs":{},"思":{"docs":{},"想":{"docs":{},"明":{"docs":{},"明":{"docs":{},"以":{"docs":{},"前":{"docs":{},"用":{"docs":{},"到":{"docs":{},"过":{"docs":{},"，":{"docs":{},"但":{"docs":{},"就":{"docs":{},"是":{"docs":{},"想":{"docs":{},"不":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"看":{"docs":{},"来":{"docs":{},"还":{"docs":{},"是":{"docs":{},"要":{"docs":{},"总":{"docs":{},"结":{"docs":{},"题":{"docs":{},"解":{"docs":{},"的":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}},"写":{"docs":{},"题":{"docs":{},"解":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"目":{"docs":{},"的":{"docs":{},"是":{"docs":{},"方":{"docs":{},"便":{"docs":{},"自":{"docs":{},"己":{"docs":{},"以":{"docs":{},"后":{"docs":{},"再":{"docs":{},"次":{"docs":{},"查":{"docs":{},"看":{"docs":{},"和":{"docs":{},"复":{"docs":{},"习":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"题":{"docs":{},"解":{"docs":{},"的":{"docs":{},"只":{"docs":{},"是":{"docs":{},"以":{"docs":{},"自":{"docs":{},"己":{"docs":{},"能":{"docs":{},"理":{"docs":{},"解":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"为":{"docs":{},"标":{"docs":{},"准":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"幸":{"docs":{},"能":{"docs":{},"帮":{"docs":{},"助":{"docs":{},"到":{"docs":{},"你":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"就":{"docs":{},"更":{"docs":{},"好":{"docs":{},"了":{"docs":{},"。":{"docs":{"./":{"ref":"./","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"入":{"docs":{},"数":{"docs":{},"据":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}},"菜":{"docs":{},"鸡":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"日":{"docs":{},"记":{"docs":{"./":{"ref":"./","tf":10.333333333333334}}}}}}}},"#":{"docs":{"part1/":{"ref":"part1/","tf":1},"part3/":{"ref":"part3/","tf":1}}},"l":{"1":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}},",":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}},"2":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232}},")":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}},"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"part1/":{"ref":"part1/","tf":3.333333333333333},"part2/":{"ref":"part2/","tf":3.333333333333333},"part3/":{"ref":"part3/","tf":3.333333333333333},"part6/":{"ref":"part6/","tf":3.333333333333333}}}}}}},"n":{"1":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},"2":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}},")":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"t":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}},")":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}},";":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.02127659574468085}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.038461538461538464},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.05555555555555555},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.07339449541284404}},"e":{"docs":{},"(":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}},"v":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.015544041450777202}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.010362694300518135}}}}}}}}}}}}}}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"{":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},"<":{"docs":{},">":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}},"(":{"docs":{},")":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"p":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"o":{"docs":{},"n":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},"c":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"机":{"docs":{},"制":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":5}}}}}}}},"u":{"docs":{},"c":{"docs":{},"k":{"docs":{},"!":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}},"(":{"2":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.027210884353741496},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}},"[":{"docs":{},"]":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},"2":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},"docs":{}}}}}},"l":{"1":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232}}},"2":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}},"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}},"j":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}},"u":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},")":{"docs":{},")":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}},"s":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"docs":{}}}}}}}}}}}},"n":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}},"!":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},".":{"docs":{},"i":{"docs":{},"s":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}}}}}},"k":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}},"最":{"docs":{},"近":{"docs":{},"最":{"docs":{},"少":{"docs":{},"使":{"docs":{},"用":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}}}},"e":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}},")":{"docs":{},";":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}},"f":{"1":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}},"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},")":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}},"a":{"1":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}},"docs":{}}},"+":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.08522727272727272},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.03875968992248062},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.03546099290780142}},"=":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232}}}},"=":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.09302325581395349},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.09615384615384616},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.10869565217391304},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.03977272727272727},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.10493827160493827},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.08333333333333333},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.09067357512953368},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.09174311926605505},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.05},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.044444444444444446},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.06976744186046512},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.14285714285714285},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.09219858156028368}},"=":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.043478260869565216},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.037037037037037035},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"f":{"1":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}},"2":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}},")":{"docs":{},";":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}}},";":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}},"3":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}},"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}}},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.028846153846153848},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"m":{"docs":{},"e":{"docs":{},"d":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"e":{"docs":{},"d":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"o":{"docs":{},"u":{"docs":{},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}}}}}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},";":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}}}}}}},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}}}}}}}}},"[":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{},"]":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101}},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.024691358024691357},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.045871559633027525}}},",":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}}},")":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.027522935779816515}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.046511627906976744},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.08695652173913043},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.07386363636363637},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.018518518518518517},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.08333333333333333},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.04145077720207254},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.06201550387596899},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.07482993197278912},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.03546099290780142}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}},"1":{"2":{"8":{"docs":{},"]":{"docs":{},";":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}},"docs":{}},"docs":{}},"docs":{},"]":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.03333333333333333},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}},"[":{"docs":{},"]":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},"]":{"docs":{},";":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}}}},"]":{"docs":{},";":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}},"d":{"docs":{},"e":{"docs":{},"x":{"2":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},"docs":{}},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}},"e":{"docs":{},"s":{"docs":{},"[":{"docs":{},"p":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},"]":{"docs":{},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}},"docs":{}}}}}}}}}}}},"f":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"1":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364}}},"docs":{}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{},"]":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"docs":{}}}}}}}},"docs":{}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}}}}},"i":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":3.333333333333333}}}},"m":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.03409090909090909}},"a":{"docs":{},"p":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.046511627906976744},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.010362694300518135},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.02040816326530612}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.010362694300518135}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"0":{"docs":{},",":{"1":{"docs":{},")":{"docs":{},";":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}}}},"docs":{}}},"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}},"x":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}},";":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}}}},"n":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.022727272727272728},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.03333333333333333},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.03875968992248062},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.02040816326530612},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0851063829787234}},"e":{"docs":{},"w":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.028846153846153848},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.02072538860103627},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.05},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.02040816326530612},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.02127659574468085}}},"x":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}}},"u":{"docs":{},"m":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}},"s":{"1":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364}},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}}}}}},"2":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}},")":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.017045454545454544}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},";":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"2":{"docs":{},"]":{"docs":{},")":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}},"docs":{}}}}}}},"。":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"docs":{},",":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}},";":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.02040816326530612}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"，":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"则":{"docs":{},"往":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"中":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"进":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"之":{"docs":{},"前":{"docs":{},"已":{"docs":{},"经":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"值":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"和":{"docs":{},"为":{"docs":{},"k":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}},"j":{"docs":{},"]":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}},")":{"docs":{"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}},"，":{"docs":{},"其":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"在":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}},"l":{"docs":{},"l":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}},")":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.028846153846153848},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.018518518518518517},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}},")":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}},")":{"docs":{},"。":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},";":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.05699481865284974}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}},"e":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}}}}},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601}}},"(":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}}},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}},"(":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}},";":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}},"）":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}},"，":{"docs":{},"可":{"docs":{},"知":{"docs":{},"至":{"docs":{},"少":{"docs":{},"存":{"docs":{},"在":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},")":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}},"p":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.04145077720207254},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}}}}},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}},"操":{"docs":{},"作":{"docs":{},"面":{"docs":{},"临":{"docs":{},"的":{"docs":{},"主":{"docs":{},"要":{"docs":{},"问":{"docs":{},"题":{"docs":{},"是":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"只":{"docs":{},"使":{"docs":{},"用":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"当":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"容":{"docs":{},"量":{"docs":{},"达":{"docs":{},"到":{"docs":{},"上":{"docs":{},"限":{"docs":{},"后":{"docs":{},"，":{"docs":{},"不":{"docs":{},"容":{"docs":{},"易":{"docs":{},"删":{"docs":{},"除":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"此":{"docs":{},"时":{"docs":{},"能":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"类":{"docs":{},"似":{"docs":{},"于":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"把":{"docs":{},"队":{"docs":{},"列":{"docs":{},"中":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"删":{"docs":{},"除":{"docs":{},"就":{"docs":{},"比":{"docs":{},"较":{"docs":{},"容":{"docs":{},"易":{"docs":{},"了":{"docs":{},"。":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.024691358024691357},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.027522935779816515}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}},";":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101}}},"v":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}},"r":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.03333333333333333}}}}}}}}}}}}}},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}},"o":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}},",":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.02962962962962963}}},"、":{"docs":{},"q":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}},"，":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"表":{"docs":{},"示":{"docs":{},"为":{"docs":{},"一":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}},"t":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.028368794326241134}},")":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.02127659574468085}}},"。":{"docs":{},"但":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"。":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}},"docs":{}}}}}}}}}}}}},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"在":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"找":{"docs":{},"出":{"docs":{},"和":{"docs":{},"为":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{},"的":{"docs":{},"那":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}},"已":{"docs":{},"知":{"docs":{},"，":{"docs":{},"此":{"docs":{},"时":{"docs":{},"只":{"docs":{},"要":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"a":{"1":{"docs":{},"或":{"docs":{},"者":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"n":{"docs":{},"，":{"docs":{},"都":{"docs":{},"可":{"docs":{},"求":{"docs":{},"得":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"只":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}},"i":{"docs":{},"l":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},".":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}},"w":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601}}}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.044444444444444446}}}}}}}}},"{":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.038461538461538464},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.043478260869565216},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.028409090909090908},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.04938271604938271},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.07772020725388601},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.045871559633027525},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.05},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.037037037037037035},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.03875968992248062},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.04964539007092199}}},"两":{"docs":{},"个":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":5}}}},"相":{"docs":{},"加":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":5}}}}}},"但":{"docs":{},"我":{"docs":{},"们":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"建":{"docs":{},"立":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"，":{"docs":{},"当":{"docs":{},"读":{"docs":{},"取":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"时":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"判":{"docs":{},"断":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"里":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"啊":{"docs":{},"，":{"docs":{},"这":{"docs":{},"样":{"docs":{},"写":{"docs":{},"在":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"执":{"docs":{},"行":{"docs":{},"用":{"docs":{},"时":{"docs":{},"还":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"大":{"docs":{},"的":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"后":{"docs":{},"来":{"docs":{},"知":{"docs":{},"道":{"docs":{},"了":{"docs":{},"，":{"docs":{},"j":{"docs":{},"a":{"docs":{},"v":{"docs":{},"a":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"可":{"docs":{},"以":{"docs":{},"很":{"docs":{},"方":{"docs":{},"便":{"docs":{},"的":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"里":{"docs":{},"面":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"自":{"docs":{},"带":{"docs":{},"一":{"docs":{},"个":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"后":{"docs":{},"继":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"维":{"docs":{},"护":{"docs":{},"了":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"看":{"docs":{},"一":{"docs":{},"眼":{"docs":{},"这":{"docs":{},"个":{"docs":{},"说":{"docs":{},"明":{"docs":{},".":{"docs":{},".":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"还":{"docs":{},"是":{"docs":{},"很":{"docs":{},"麻":{"docs":{},"烦":{"docs":{},"的":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}},"以":{"docs":{},"上":{"docs":{},"解":{"docs":{},"法":{"docs":{},"还":{"docs":{},"不":{"docs":{},"是":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"本":{"docs":{},"题":{"docs":{},"还":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"解":{"docs":{},"决":{"docs":{},"，":{"docs":{},"以":{"docs":{},"后":{"docs":{},"有":{"docs":{},"时":{"docs":{},"间":{"docs":{},"再":{"docs":{},"补":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"样":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"太":{"docs":{},"大":{"docs":{},"了":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"想":{"docs":{},"到":{"docs":{},"处":{"docs":{},"理":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"时":{"docs":{},"最":{"docs":{},"常":{"docs":{},"用":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"是":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"。":{"docs":{},"那":{"docs":{},"么":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"利":{"docs":{},"用":{"docs":{},"这":{"docs":{},"个":{"docs":{},"前":{"docs":{},"缀":{"docs":{},"和":{"docs":{},"数":{"docs":{},"组":{"docs":{},"优":{"docs":{},"化":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"首":{"docs":{},"先":{"docs":{},"看":{"docs":{},"一":{"docs":{},"个":{"docs":{},"样":{"docs":{},"例":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}},"每":{"docs":{},"种":{"docs":{},"输":{"docs":{},"入":{"docs":{},"只":{"docs":{},"会":{"docs":{},"对":{"docs":{},"应":{"docs":{},"一":{"docs":{},"个":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"同":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"不":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"两":{"docs":{},"遍":{"docs":{},"。":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"使":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"来":{"docs":{},"实":{"docs":{},"现":{"docs":{},"吗":{"docs":{},"？":{"docs":{"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664}}}}}}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"或":{"docs":{},"递":{"docs":{},"归":{"docs":{},"地":{"docs":{},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"你":{"docs":{},"能":{"docs":{},"否":{"docs":{},"用":{"docs":{},"两":{"docs":{},"种":{"docs":{},"方":{"docs":{},"法":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"？":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"只":{"docs":{},"是":{"docs":{},"单":{"docs":{},"纯":{"docs":{},"的":{"docs":{},"改":{"docs":{},"变":{"docs":{},"节":{"docs":{},"点":{"docs":{},"内":{"docs":{},"部":{"docs":{},"的":{"docs":{},"值":{"docs":{},"，":{"docs":{},"而":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"实":{"docs":{},"际":{"docs":{},"进":{"docs":{},"行":{"docs":{},"节":{"docs":{},"点":{"docs":{},"交":{"docs":{},"换":{"docs":{},"。":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"算":{"docs":{},"法":{"docs":{},"只":{"docs":{},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"常":{"docs":{},"数":{"docs":{},"的":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}},"应":{"docs":{},"该":{"docs":{},"具":{"docs":{},"有":{"docs":{},"线":{"docs":{},"性":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"。":{"docs":{"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"在":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}},"和":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.017045454545454544},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}},"一":{"docs":{},"个":{"docs":{},"目":{"docs":{},"标":{"docs":{},"值":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}},"为":{"docs":{},"k":{"docs":{},"。":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"了":{"docs":{},"在":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"找":{"docs":{},"出":{"docs":{},"两":{"docs":{},"数":{"docs":{},"之":{"docs":{},"差":{"docs":{},"为":{"docs":{},"k":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{},"和":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"_":{"1":{"docs":{},"类":{"docs":{},"似":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"建":{"docs":{},"立":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":5}}}}}}},"s":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"正":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":10}}}}}}}}}}}},"思":{"docs":{},"路":{"2":{"docs":{},".":{"1":{"docs":{},".":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"docs":{}}},"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.046511627906976744},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.019230769230769232},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.043478260869565216},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.08333333333333333},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.03333333333333333},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"他":{"docs":{},"们":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{},"。":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}}}}}}}}}}},"最":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"想":{"docs":{},"法":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"两":{"docs":{},"个":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":5}}}}}}},"后":{"docs":{},"，":{"docs":{},"还":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"参":{"docs":{},"考":{"docs":{},"了":{"docs":{},"大":{"docs":{},"佬":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"后":{"docs":{},"手":{"docs":{},"写":{"docs":{},"的":{"docs":{},"l":{"docs":{},"r":{"docs":{},"u":{"docs":{},"算":{"docs":{},"法":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"直":{"docs":{},"接":{"docs":{},"看":{"docs":{},"代":{"docs":{},"码":{"docs":{},"吧":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"终":{"docs":{},"判":{"docs":{},"断":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"标":{"docs":{},"准":{"docs":{},"为":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372}},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"不":{"docs":{},"含":{"docs":{},"有":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}}}},"非":{"docs":{},"空":{"docs":{},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"除":{"docs":{},"了":{"docs":{},"某":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"以":{"docs":{},"外":{"docs":{},"，":{"docs":{},"其":{"docs":{},"余":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"均":{"docs":{},"出":{"docs":{},"现":{"docs":{},"两":{"docs":{},"次":{"docs":{},"。":{"docs":{},"找":{"docs":{},"出":{"docs":{},"那":{"docs":{},"个":{"docs":{},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},",":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}},"包":{"docs":{},"含":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}},"两":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}},"课":{"docs":{},"程":{"docs":{},"总":{"docs":{},"量":{"docs":{},"以":{"docs":{},"及":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"先":{"docs":{},"决":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"你":{"docs":{},"为":{"docs":{},"了":{"docs":{},"学":{"docs":{},"完":{"docs":{},"所":{"docs":{},"有":{"docs":{},"课":{"docs":{},"程":{"docs":{},"所":{"docs":{},"安":{"docs":{},"排":{"docs":{},"的":{"docs":{},"学":{"docs":{},"习":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}},"你":{"docs":{},"一":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}},"这":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"：":{"1":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}},"docs":{}}}}}}}},"题":{"docs":{},"目":{"docs":{},"描":{"docs":{},"述":{"2":{"docs":{},".":{"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"docs":{"part1/1. 两数之和.html":{"ref":"part1/1. 两数之和.html","tf":0.023255813953488372},"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}},"!":{"docs":{},"=":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.038461538461538464},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.018518518518518517},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}},"%":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}},"/":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.028409090909090908},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"用":{"docs":{},"于":{"docs":{},"完":{"docs":{},"成":{"docs":{},"对":{"docs":{},"反":{"docs":{},"转":{"docs":{},"后":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"连":{"docs":{},"接":{"docs":{},"，":{"docs":{},"默":{"docs":{},"认":{"docs":{},"先":{"docs":{},"指":{"docs":{},"向":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"都":{"docs":{},"不":{"docs":{},"反":{"docs":{},"转":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"用":{"docs":{},"于":{"docs":{},"最":{"docs":{},"后":{"docs":{},"返":{"docs":{},"回":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}},"开":{"docs":{},"始":{"docs":{},"找":{"docs":{},"k":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"后":{"docs":{},"的":{"docs":{},"尾":{"docs":{},"节":{"docs":{},"点":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}},"特":{"docs":{},"判":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}},"剪":{"docs":{},"枝":{"docs":{},"一":{"docs":{},"下":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"包":{"docs":{},"含":{"docs":{},"p":{"docs":{},",":{"docs":{},"q":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"为":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}},"p":{"docs":{},"或":{"docs":{},"者":{"docs":{},"q":{"docs":{},",":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"包":{"docs":{},"含":{"docs":{},"p":{"docs":{},"或":{"docs":{},"q":{"docs":{},"即":{"docs":{},"可":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"等":{"docs":{},"于":{"docs":{},"p":{"docs":{},"或":{"docs":{},"q":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"它":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"包":{"docs":{},"含":{"docs":{},"过":{"docs":{},"p":{"docs":{},"或":{"docs":{},"q":{"docs":{},"，":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{},"f":{"docs":{},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"节":{"docs":{},"点":{"docs":{},"或":{"docs":{},"者":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"本":{"docs":{},"身":{"docs":{},"是":{"docs":{},"否":{"docs":{},"包":{"docs":{},"含":{"docs":{},"p":{"docs":{},",":{"docs":{},"q":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"树":{"docs":{},"是":{"docs":{},"否":{"docs":{},"包":{"docs":{},"含":{"docs":{},"p":{"docs":{},",":{"docs":{},"q":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},"的":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"节":{"docs":{},"点":{"docs":{},"即":{"docs":{},"为":{"docs":{},"结":{"docs":{},"果":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"一":{"docs":{},"个":{"docs":{},"全":{"docs":{},"局":{"docs":{},"变":{"docs":{},"量":{"docs":{},"存":{"docs":{},"储":{"docs":{},"。":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"因":{"docs":{},"为":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}},"建":{"docs":{},"立":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"数":{"docs":{},"组":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"给":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"数":{"docs":{},"组":{"docs":{},"前":{"docs":{},"添":{"docs":{},"加":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"0":{"docs":{},"，":{"docs":{},"确":{"docs":{},"保":{"docs":{},"可":{"docs":{},"以":{"docs":{},"判":{"docs":{},"断":{"docs":{},"到":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}},"docs":{}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}},"当":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}}}},"*":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}},"=":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},":":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}},"?":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.011363636363636364},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}},"a":{"1":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.028368794326241134}},";":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"docs":{},"d":{"docs":{},"d":{"docs":{},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}},"n":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}},"[":{"0":{"docs":{},"]":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"docs":{},"]":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"a":{"docs":{},"y":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}},"t":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.022727272727272728},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.024691358024691357},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.018134715025906734},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.03669724770642202},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.02962962962962963},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"k":{"docs":{},"g":{"docs":{},"r":{"docs":{},"o":{"docs":{},"u":{"docs":{},"p":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{},"a":{"docs":{},"n":{"docs":{},"s":{"docs":{},")":{"docs":{},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{},";":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},"e":{"docs":{},")":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"y":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}},"s":{"docs":{},";":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}},")":{"docs":{},")":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},";":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.022222222222222223}},".":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}},";":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}}}}},";":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}},",":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}},"为":{"docs":{},"p":{"docs":{},"或":{"docs":{},"q":{"docs":{},",":{"docs":{},"它":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"为":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"。":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"分":{"docs":{},"别":{"docs":{},"包":{"docs":{},"含":{"docs":{},"p":{"docs":{},",":{"docs":{},"q":{"docs":{},"。":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.038461538461538464}},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.015544041450777202},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601}}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.015544041450777202}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.012953367875647668}}}}}},"|":{"docs":{},"|":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.044444444444444446}}}},"}":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.038461538461538464},"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.028409090909090908},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.037037037037037035},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.08031088082901554},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.045871559633027525},"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.03333333333333333},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.037037037037037035},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.031007751937984496},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}},"一":{"docs":{},"位":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}},"之":{"docs":{},"外":{"docs":{},"，":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"都":{"docs":{},"不":{"docs":{},"会":{"docs":{},"以":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}}}}}},"间":{"docs":{},"（":{"docs":{},"包":{"docs":{},"括":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}}}}},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"处":{"docs":{},"理":{"docs":{},"好":{"docs":{},"进":{"docs":{},"位":{"docs":{},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"好":{"docs":{},"了":{"docs":{},"。":{"docs":{},"注":{"docs":{},"意":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"退":{"docs":{},"出":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"最":{"docs":{},"后":{"docs":{},"也":{"docs":{},"要":{"docs":{},"对":{"docs":{},"f":{"docs":{},"l":{"docs":{},"a":{"docs":{},"g":{"docs":{},"进":{"docs":{},"行":{"docs":{},"判":{"docs":{},"断":{"docs":{},"。":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"将":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"相":{"docs":{},"加":{"docs":{},"起":{"docs":{},"来":{"docs":{},"，":{"docs":{},"则":{"docs":{},"会":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"和":{"docs":{},"。":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"借":{"docs":{},"助":{"docs":{},"额":{"docs":{},"外":{"docs":{},"空":{"docs":{},"间":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"需":{"docs":{},"要":{"docs":{},"单":{"docs":{},"独":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"函":{"docs":{},"数":{"docs":{},"，":{"docs":{},"能":{"docs":{},"够":{"docs":{},"以":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"完":{"docs":{},"成":{"docs":{},"反":{"docs":{},"转":{"docs":{},"，":{"docs":{},"也":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"参":{"docs":{},"考":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"2":{"0":{"6":{"docs":{},"题":{"docs":{},"。":{"docs":{},"e":{"docs":{},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"m":{"docs":{},"总":{"docs":{},"的":{"docs":{},"来":{"docs":{},"说":{"docs":{},"还":{"docs":{},"是":{"docs":{},"基":{"docs":{},"本":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"难":{"docs":{},"度":{"docs":{},"都":{"docs":{},"不":{"docs":{},"大":{"docs":{},"，":{"docs":{},"但":{"docs":{},"整":{"docs":{},"合":{"docs":{},"到":{"docs":{},"一":{"docs":{},"块":{"docs":{},"就":{"docs":{},"难":{"docs":{},"了":{"docs":{},"，":{"docs":{},"细":{"docs":{},"节":{"docs":{},"上":{"docs":{},"要":{"docs":{},"注":{"docs":{},"意":{"docs":{},"好":{"docs":{},"，":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{},"：":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"空":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"，":{"docs":{},"则":{"docs":{},"可":{"docs":{},"以":{"docs":{},"利":{"docs":{},"用":{"docs":{},"栈":{"docs":{},"+":{"docs":{},"递":{"docs":{},"归":{"docs":{},"轻":{"docs":{},"松":{"docs":{},"完":{"docs":{},"成":{"docs":{},"反":{"docs":{},"转":{"docs":{},":":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}}}}},"节":{"docs":{},"点":{"docs":{},"总":{"docs":{},"数":{"docs":{},"不":{"docs":{},"是":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}},"密":{"docs":{},"钥":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}},"已":{"docs":{},"经":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"变":{"docs":{},"更":{"docs":{},"其":{"docs":{},"数":{"docs":{},"据":{"docs":{},"值":{"docs":{},"；":{"docs":{},"如":{"docs":{},"果":{"docs":{},"密":{"docs":{},"钥":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"则":{"docs":{},"插":{"docs":{},"入":{"docs":{},"该":{"docs":{},"组":{"docs":{},"「":{"docs":{},"密":{"docs":{},"钥":{"docs":{},"/":{"docs":{},"数":{"docs":{},"据":{"docs":{},"值":{"docs":{},"」":{"docs":{},"。":{"docs":{},"当":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"容":{"docs":{},"量":{"docs":{},"达":{"docs":{},"到":{"docs":{},"上":{"docs":{},"限":{"docs":{},"时":{"docs":{},"，":{"docs":{},"它":{"docs":{},"应":{"docs":{},"该":{"docs":{},"在":{"docs":{},"写":{"docs":{},"入":{"docs":{},"新":{"docs":{},"数":{"docs":{},"据":{"docs":{},"之":{"docs":{},"前":{"docs":{},"删":{"docs":{},"除":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"值":{"docs":{},"，":{"docs":{},"从":{"docs":{},"而":{"docs":{},"为":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"值":{"docs":{},"留":{"docs":{},"出":{"docs":{},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"一":{"docs":{},"定":{"docs":{},"分":{"docs":{},"别":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"它":{"docs":{},"们":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"的":{"docs":{},"左":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"里":{"docs":{},"面":{"docs":{},"。":{"docs":{},"或":{"docs":{},"者":{"docs":{},"p":{"docs":{},"，":{"docs":{},"q":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"一":{"docs":{},"定":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"是":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"。":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"我":{"docs":{},"假":{"docs":{},"装":{"docs":{},"看":{"docs":{},"不":{"docs":{},"见":{"docs":{},"说":{"docs":{},"明":{"docs":{},"的":{"docs":{},"话":{"docs":{},"&":{"docs":{},"#":{"docs":{},"x":{"1":{"docs":{},"f":{"6":{"4":{"3":{"docs":{},";":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"建":{"docs":{},"立":{"docs":{},"一":{"docs":{},"个":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"轻":{"docs":{},"松":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"a":{"1":{"docs":{},"，":{"docs":{},"在":{"docs":{},"求":{"docs":{},"n":{"docs":{},"的":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"要":{"docs":{},"用":{"docs":{},"到":{"docs":{},"s":{"docs":{},"q":{"docs":{},"r":{"docs":{},"t":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"n":{"docs":{},",":{"docs":{},"则":{"docs":{},"不":{"docs":{},"需":{"docs":{},"要":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"选":{"docs":{},"择":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"n":{"docs":{},"。":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}},"开":{"docs":{},"头":{"docs":{},"。":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}},"您":{"docs":{},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{},"除":{"docs":{},"了":{"docs":{},"数":{"docs":{},"字":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}}}}},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}},"组":{"docs":{},"中":{"docs":{},"只":{"docs":{},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"重":{"docs":{},"复":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"但":{"docs":{},"它":{"docs":{},"可":{"docs":{},"能":{"docs":{},"不":{"docs":{},"止":{"docs":{},"重":{"docs":{},"复":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}},"这":{"docs":{},"个":{"docs":{},"倒":{"docs":{},"无":{"docs":{},"所":{"docs":{},"谓":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"存":{"docs":{},"储":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"它":{"docs":{},"们":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"只":{"docs":{},"能":{"docs":{},"存":{"docs":{},"储":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"用":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"两":{"docs":{},"个":{"docs":{},"非":{"docs":{},"负":{"docs":{},"的":{"docs":{},"整":{"docs":{},"数":{"docs":{},"。":{"docs":{},"其":{"docs":{},"中":{"docs":{},"，":{"docs":{},"它":{"docs":{},"们":{"docs":{},"各":{"docs":{},"自":{"docs":{},"的":{"docs":{},"位":{"docs":{},"数":{"docs":{},"是":{"docs":{},"按":{"docs":{},"照":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}},"正":{"docs":{},"序":{"docs":{},"（":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"）":{"docs":{},"数":{"docs":{},"组":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}}}}}}},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"为":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}}}},"整":{"docs":{},"数":{"docs":{},"倍":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"请":{"docs":{},"将":{"docs":{},"最":{"docs":{},"后":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"保":{"docs":{},"持":{"docs":{},"原":{"docs":{},"有":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}},"深":{"docs":{},"度":{"docs":{},"尽":{"docs":{},"可":{"docs":{},"能":{"docs":{},"大":{"docs":{},"（":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"是":{"docs":{},"它":{"docs":{},"自":{"docs":{},"己":{"docs":{},"的":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"）":{"docs":{},"。":{"docs":{},"”":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}}}},"祖":{"docs":{},"先":{"docs":{},"且":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}},"空":{"docs":{},"间":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}},"不":{"docs":{},"能":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"了":{"docs":{},"！":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}},"范":{"docs":{},"围":{"docs":{},"是":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"。":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}}}},"逆":{"docs":{},"序":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}},"非":{"docs":{},"空":{"docs":{"part1/2. 两数相加.html":{"ref":"part1/2. 两数相加.html","tf":0.009615384615384616}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}},"m":{"docs":{},"p":{"docs":{},"e":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{"competition/":{"ref":"competition/","tf":11}}}}}}}}},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.012953367875647668}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.018134715025906734}}}}}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.015544041450777202},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}}}}},"n":{"docs":{},"t":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}},"j":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}},")":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}},"u":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}},"s":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04}},")":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608},"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04}}},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},")":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{},"返":{"docs":{},"回":{"docs":{},"这":{"docs":{},"个":{"docs":{},"过":{"docs":{},"程":{"docs":{},"中":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"长":{"docs":{},"度":{"docs":{},"即":{"docs":{},"为":{"docs":{},"答":{"docs":{},"案":{"docs":{},"。":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.017045454545454544}},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"2":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.022727272727272728}},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}},"c":{"docs":{},"k":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}}}}}}}}},"<":{"docs":{},">":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"(":{"docs":{},"i":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04}}}}}}},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}},"z":{"docs":{},"e":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}},"(":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}},"u":{"docs":{},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"c":{"docs":{},"a":{"docs":{},"p":{"docs":{},"a":{"docs":{},"c":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"f":{"docs":{},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"(":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}}}}}}}}}}}}}}}},"m":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.02040816326530612},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}}}}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}}}}}},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"判":{"docs":{},"断":{"docs":{},"，":{"docs":{},"即":{"docs":{},"当":{"docs":{},"前":{"docs":{},"字":{"docs":{},"符":{"docs":{},"是":{"docs":{},"否":{"docs":{},"在":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"过":{"docs":{},"，":{"docs":{},"同":{"docs":{},"时":{"docs":{},"当":{"docs":{},"i":{"docs":{},"往":{"docs":{},"前":{"docs":{},"移":{"docs":{},"动":{"docs":{},"时":{"docs":{},"也":{"docs":{},"要":{"docs":{},"更":{"docs":{},"新":{"docs":{},"好":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"表":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"因":{"docs":{},"为":{"docs":{},"i":{"docs":{},"，":{"docs":{},"j":{"docs":{},"都":{"docs":{},"不":{"docs":{},"会":{"docs":{},"回":{"docs":{},"退":{"docs":{},"，":{"docs":{},"最":{"docs":{},"大":{"docs":{},"为":{"docs":{},"n":{"docs":{},"，":{"docs":{},"算":{"docs":{},"法":{"docs":{},"整":{"docs":{},"体":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"最":{"docs":{},"长":{"docs":{},"子":{"docs":{},"串":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":5}}}}}}}}}}}},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},"]":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"[":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},"]":{"docs":{},"中":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"则":{"docs":{},"j":{"docs":{},"+":{"docs":{},"+":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"存":{"docs":{},"在":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"则":{"docs":{},"重":{"docs":{},"复":{"docs":{},"字":{"docs":{},"符":{"docs":{},"一":{"docs":{},"定":{"docs":{},"为":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"j":{"docs":{},")":{"docs":{},",":{"docs":{},"则":{"docs":{},"i":{"docs":{},"+":{"docs":{},"+":{"docs":{},"一":{"docs":{},"直":{"docs":{},"到":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"r":{"docs":{},"a":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},")":{"docs":{"part1/3. 无重复字符的最长子串.html":{"ref":"part1/3. 无重复字符的最长子串.html","tf":0.021739130434782608}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.04964539007092199}},"/":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}},">":{"1":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}},"2":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101}}},"3":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101}}},"4":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.018518518518518517},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101}}},"5":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.018518518518518517},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}},"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.017045454545454544},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124},"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}},"=":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101}}}}}}},"d":{"docs":{},"o":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}},"p":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{},"表":{"docs":{},"示":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"s":{"docs":{},"(":{"docs":{},"i":{"docs":{},",":{"docs":{},"j":{"docs":{},")":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"回":{"docs":{},"文":{"docs":{},"串":{"docs":{},"。":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}}}}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"s":{"docs":{},"(":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},",":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},",":{"docs":{},"p":{"docs":{},",":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"1":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.017045454545454544}},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"2":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.017045454545454544}},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}},"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}},"x":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"k":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"[":{"docs":{},"]":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"1":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},"docs":{}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"1":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"2":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"2":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}},"docs":{}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}},"2":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"2":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"2":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"1":{"docs":{},",":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"1":{"docs":{},",":{"docs":{},"k":{"docs":{},")":{"docs":{},";":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}},"docs":{}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601}}}}},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}},"操":{"docs":{},"作":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"达":{"docs":{},"到":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"还":{"docs":{},"是":{"docs":{},"比":{"docs":{},"较":{"docs":{},"简":{"docs":{},"单":{"docs":{},"的":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"要":{"docs":{},"通":{"docs":{},"过":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"存":{"docs":{},"储":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"查":{"docs":{},"找":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"在":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"里":{"docs":{},"找":{"docs":{},"到":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"。":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"d":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}},"k":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.017045454545454544},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":3.3703703703703702},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.034013605442176874}},")":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}},"e":{"docs":{},"y":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.007772020725388601}}},",":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.012953367875647668}}},";":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.010362694300518135}}}}},"即":{"docs":{},"可":{"docs":{},"确":{"docs":{},"保":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}}},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"找":{"docs":{},"到":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"和":{"docs":{},"为":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}}}}}},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}},"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"m":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}},"n":{"2":{"docs":{},")":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}},"docs":{}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"others/":{"ref":"others/","tf":11}}}}}}},"不":{"docs":{},"会":{"docs":{},"同":{"docs":{},"时":{"docs":{},"为":{"docs":{},"空":{"docs":{},"。":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}}},"能":{"docs":{},"更":{"docs":{},"改":{"docs":{},"原":{"docs":{},"数":{"docs":{},"组":{"docs":{},"（":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"只":{"docs":{},"读":{"docs":{},"的":{"docs":{},"）":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"不":{"docs":{},"能":{"docs":{},"通":{"docs":{},"过":{"docs":{},"类":{"docs":{},"似":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"两":{"docs":{},"个":{"docs":{},"正":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":5}}}}}}}}}}}},"重":{"docs":{},"复":{"docs":{},"数":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":5}}}}}}},"请":{"docs":{},"你":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"正":{"docs":{},"序":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"要":{"docs":{},"求":{"docs":{},"算":{"docs":{},"法":{"docs":{},"的":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"简":{"docs":{},"直":{"docs":{},"是":{"docs":{},"我":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"以":{"docs":{},"来":{"docs":{},"的":{"docs":{},"噩":{"docs":{},"梦":{"docs":{},"，":{"docs":{},"作":{"docs":{},"为":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"第":{"4":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"，":{"docs":{},"这":{"docs":{},"难":{"docs":{},"度":{"docs":{},"是":{"docs":{},"要":{"docs":{},"劝":{"docs":{},"退":{"docs":{},"刚":{"docs":{},"刚":{"docs":{},"刷":{"docs":{},"题":{"docs":{},"的":{"docs":{},"萌":{"docs":{},"新":{"docs":{},"(":{"docs":{},"我":{"docs":{},")":{"docs":{},"啊":{"docs":{},"！":{"docs":{},"当":{"docs":{},"初":{"docs":{},"自":{"docs":{},"己":{"docs":{},"想":{"docs":{},"不":{"docs":{},"出":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"，":{"docs":{},"看":{"docs":{},"了":{"docs":{},"一":{"docs":{},"眼":{"docs":{},"题":{"docs":{},"解":{"docs":{},"后":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"明":{"docs":{},"白":{"docs":{},"，":{"docs":{},"深":{"docs":{},"入":{"docs":{},"研":{"docs":{},"究":{"docs":{},"了":{"docs":{},"一":{"docs":{},"会":{"docs":{},"勉":{"docs":{},"强":{"docs":{},"理":{"docs":{},"解":{"docs":{},"了":{"docs":{},"题":{"docs":{},"解":{"docs":{},"，":{"docs":{},"但":{"docs":{},"自":{"docs":{},"己":{"docs":{},"写":{"docs":{},"代":{"docs":{},"码":{"docs":{},"还":{"docs":{},"是":{"docs":{},"写":{"docs":{},"不":{"docs":{},"出":{"docs":{},"来":{"docs":{},"，":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"细":{"docs":{},"节":{"docs":{},"太":{"docs":{},"多":{"docs":{},"了":{"docs":{},"，":{"docs":{},"对":{"docs":{},"着":{"docs":{},"别":{"docs":{},"人":{"docs":{},"的":{"docs":{},"代":{"docs":{},"码":{"docs":{},"磕":{"docs":{},"磕":{"docs":{},"绊":{"docs":{},"绊":{"docs":{},"的":{"docs":{},"写":{"docs":{},"完":{"docs":{},"了":{"docs":{},"。":{"docs":{},"如":{"docs":{},"今":{"docs":{},"自":{"docs":{},"己":{"docs":{},"写":{"docs":{},"题":{"docs":{},"解":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"会":{"docs":{},"啊":{"docs":{},"！":{"docs":{},"刷":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"以":{"docs":{},"来":{"docs":{},"最":{"docs":{},"有":{"docs":{},"阴":{"docs":{},"影":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"！":{"docs":{},"这":{"docs":{},"题":{"docs":{},"以":{"docs":{},"后":{"docs":{},"有":{"docs":{},"时":{"docs":{},"间":{"docs":{},"再":{"docs":{},"补":{"docs":{},"题":{"docs":{},"解":{"docs":{},"吧":{"docs":{},"，":{"docs":{},"就":{"docs":{},"贴":{"docs":{},"个":{"docs":{},"代":{"docs":{},"码":{"docs":{},"先":{"docs":{},"。":{"docs":{"part1/4. 寻找两个正序数组的中位数.html":{"ref":"part1/4. 寻找两个正序数组的中位数.html","tf":0.005681818181818182}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"\"":{"docs":{},"\"":{"docs":{},";":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}},"&":{"docs":{},"&":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02},"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}}}},"中":{"docs":{},"心":{"docs":{},"扩":{"docs":{},"展":{"docs":{},"法":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.04}}}}}},"最":{"docs":{},"长":{"docs":{},"的":{"docs":{},"回":{"docs":{},"文":{"docs":{},"子":{"docs":{},"串":{"docs":{},"。":{"docs":{},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}},"docs":{}}},"docs":{"part1/5. 最长回文子串.html":{"ref":"part1/5. 最长回文子串.html","tf":0.02}}}}}},";":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}},"个":{"docs":{},"一":{"docs":{},"组":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":3.333333333333333}}}}}}}},"节":{"docs":{},"点":{"docs":{},"一":{"docs":{},"组":{"docs":{},"进":{"docs":{},"行":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"，":{"docs":{},"请":{"docs":{},"你":{"docs":{},"返":{"docs":{},"回":{"docs":{},"翻":{"docs":{},"转":{"docs":{},"后":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}}}}}},"当":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}}},"时":{"docs":{},"，":{"docs":{},"应":{"docs":{},"当":{"docs":{},"返":{"docs":{},"回":{"docs":{},":":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.012345679012345678}}}}}}}},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"内":{"docs":{},"完":{"docs":{},"成":{"docs":{},"这":{"docs":{},"两":{"docs":{},"种":{"docs":{},"操":{"docs":{},"作":{"docs":{},"？":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}},"小":{"docs":{},"于":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}}}}}}},"是":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}},"一":{"docs":{},"个":{"docs":{},"正":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"它":{"docs":{},"的":{"docs":{},"值":{"docs":{},"小":{"docs":{},"于":{"docs":{},"或":{"docs":{},"等":{"docs":{},"于":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"。":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}}}}}}}}}}}}}}}}}}}}}},"示":{"docs":{},"例":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}},"：":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839}}},":":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}},"说":{"docs":{},"明":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}},"：":{"docs":{"part1/25. K 个一组翻转链表.html":{"ref":"part1/25. K 个一组翻转链表.html","tf":0.006172839506172839},"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}},":":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}},"利":{"docs":{},"用":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"特":{"docs":{},"性":{"docs":{},"，":{"docs":{},"异":{"docs":{},"或":{"docs":{},"操":{"docs":{},"作":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":0.041666666666666664}}}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"出":{"docs":{},"现":{"docs":{},"一":{"docs":{},"次":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"part2/136. 只出现一次的数字.html":{"ref":"part2/136. 只出现一次的数字.html","tf":5}}}}}}}}},"能":{"docs":{},"使":{"docs":{},"用":{"docs":{},"额":{"docs":{},"外":{"docs":{},"的":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248}}}}}}}}},"@":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"r":{"docs":{},"i":{"docs":{},"d":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}},"b":{"docs":{},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.037037037037037035},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}},"。":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}},"别":{"docs":{},"想":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"个":{"docs":{},"问":{"docs":{},"题":{"docs":{},"！":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"缓":{"docs":{},"存":{"docs":{},"中":{"docs":{},"，":{"docs":{},"则":{"docs":{},"获":{"docs":{},"取":{"docs":{},"密":{"docs":{},"钥":{"docs":{},"的":{"docs":{},"值":{"docs":{},"（":{"docs":{},"总":{"docs":{},"是":{"docs":{},"正":{"docs":{},"数":{"docs":{},"）":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"返":{"docs":{},"回":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"最":{"docs":{},"后":{"docs":{},"采":{"docs":{},"用":{"docs":{},"的":{"docs":{},"是":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"+":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"来":{"docs":{},"存":{"docs":{},"储":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"p":{"docs":{},"u":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"时":{"docs":{},"，":{"docs":{},"把":{"docs":{},"数":{"docs":{},"据":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"和":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"其":{"docs":{},"中":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"k":{"docs":{},"e":{"docs":{},"d":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"链":{"docs":{},"表":{"docs":{},"头":{"docs":{},"部":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"要":{"docs":{},"删":{"docs":{},"除":{"docs":{},"最":{"docs":{},"久":{"docs":{},"未":{"docs":{},"使":{"docs":{},"用":{"docs":{},"数":{"docs":{},"据":{"docs":{},"时":{"docs":{},"，":{"docs":{},"则":{"docs":{},"删":{"docs":{},"除":{"docs":{},"链":{"docs":{},"表":{"docs":{},"尾":{"docs":{},"部":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"操":{"docs":{},"作":{"docs":{},"直":{"docs":{},"接":{"docs":{},"从":{"docs":{},"h":{"docs":{},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"中":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"更":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"对":{"docs":{},"应":{"docs":{},"数":{"docs":{},"据":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"即":{"docs":{},"可":{"docs":{},"。":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"都":{"docs":{},"是":{"docs":{},"唯":{"docs":{},"一":{"docs":{},"的":{"docs":{},"。":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}},"缓":{"docs":{},"存":{"docs":{},"机":{"docs":{},"制":{"docs":{},"。":{"docs":{},"它":{"docs":{},"应":{"docs":{},"该":{"docs":{},"支":{"docs":{},"持":{"docs":{},"以":{"docs":{},"下":{"docs":{},"操":{"docs":{},"作":{"docs":{},"：":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}},"获":{"docs":{},"取":{"docs":{},"数":{"docs":{},"据":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0051813471502590676}}}}}},"运":{"docs":{},"用":{"docs":{},"你":{"docs":{},"所":{"docs":{},"掌":{"docs":{},"握":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"设":{"docs":{},"计":{"docs":{},"和":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338}}}}}}}}}}}}}}}}}}}}},"进":{"docs":{},"阶":{"docs":{},":":{"docs":{"part2/146. LRU缓存机制.html":{"ref":"part2/146. LRU缓存机制.html","tf":0.0025906735751295338},"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}},"反":{"docs":{},"转":{"docs":{},"一":{"docs":{},"个":{"docs":{},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}}}}},"链":{"docs":{},"表":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":5}}}}}},"输":{"docs":{},"入":{"docs":{},":":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}},"出":{"docs":{},":":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}},"迭":{"docs":{},"代":{"docs":{},"写":{"docs":{},"法":{"docs":{},"：":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}},"docs":{}}},"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.009174311926605505}}}}}}},"递":{"docs":{},"归":{"docs":{},"写":{"docs":{},"法":{"docs":{},"：":{"docs":{"part3/206. 反转链表.html":{"ref":"part3/206. 反转链表.html","tf":0.01834862385321101}}}}}}},"[":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}},"docs":{}}},"1":{"docs":{},",":{"0":{"docs":{},",":{"2":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"0":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}},"3":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}}},"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}},"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}},"q":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{},"e":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.03333333333333333}}}}}},")":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.022222222222222223}},";":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.022222222222222223}}}}},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"想":{"docs":{},"要":{"docs":{},"学":{"docs":{},"习":{"docs":{},"课":{"docs":{},"程":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}},"到":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666},"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.015503875968992248},"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"有":{"docs":{},"多":{"docs":{},"个":{"docs":{},"正":{"docs":{},"确":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"你":{"docs":{},"只":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"种":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"了":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"完":{"docs":{},"成":{"docs":{},"所":{"docs":{},"有":{"docs":{},"课":{"docs":{},"程":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"空":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"选":{"docs":{},"修":{"docs":{},"某":{"docs":{},"些":{"docs":{},"课":{"docs":{},"程":{"docs":{},"之":{"docs":{},"前":{"docs":{},"需":{"docs":{},"要":{"docs":{},"一":{"docs":{},"些":{"docs":{},"先":{"docs":{},"修":{"docs":{},"课":{"docs":{},"程":{"docs":{},"。":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}},"现":{"docs":{},"在":{"docs":{},"你":{"docs":{},"总":{"docs":{},"共":{"docs":{},"有":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}},"课":{"docs":{},"程":{"docs":{},"表":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":3.333333333333333}}}}},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"拓":{"docs":{},"扑":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"维":{"docs":{},"护":{"docs":{},"一":{"docs":{},"个":{"docs":{},"入":{"docs":{},"度":{"docs":{},"表":{"docs":{},"，":{"docs":{},"每":{"docs":{},"次":{"docs":{},"把":{"docs":{},"入":{"docs":{},"度":{"docs":{},"为":{"0":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"推":{"docs":{},"入":{"docs":{},"队":{"docs":{},"列":{"docs":{},"，":{"docs":{},"加":{"docs":{},"入":{"docs":{},"结":{"docs":{},"果":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"维":{"docs":{},"护":{"docs":{},"入":{"docs":{},"度":{"docs":{},"表":{"docs":{},"剩":{"docs":{},"余":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"入":{"docs":{},"度":{"docs":{},"。":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}},"门":{"docs":{},"课":{"docs":{},"需":{"docs":{},"要":{"docs":{},"选":{"docs":{},"，":{"docs":{},"记":{"docs":{},"为":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}},"，":{"docs":{},"你":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"完":{"docs":{},"成":{"docs":{},"课":{"docs":{},"程":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"匹":{"docs":{},"配":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"他":{"docs":{},"们":{"docs":{},":":{"docs":{"part3/210. 课程表 II.html":{"ref":"part3/210. 课程表 II.html","tf":0.016666666666666666}}}}}}}}}}}}}}},"且":{"docs":{},"整":{"docs":{},"数":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}},"x":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.014814814814814815}},"，":{"docs":{},"满":{"docs":{},"足":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}},"为":{"docs":{},"不":{"docs":{},"同":{"docs":{},"节":{"docs":{},"点":{"docs":{},"且":{"docs":{},"均":{"docs":{},"存":{"docs":{},"在":{"docs":{},"于":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"。":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"种":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"情":{"docs":{},"况":{"docs":{},"。":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":5}}}}}}}}}}}},"找":{"docs":{},"到":{"docs":{},"该":{"docs":{},"树":{"docs":{},"中":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"定":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"。":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}},"百":{"docs":{},"度":{"docs":{},"百":{"docs":{},"科":{"docs":{},"中":{"docs":{},"最":{"docs":{},"近":{"docs":{},"公":{"docs":{},"共":{"docs":{},"祖":{"docs":{},"先":{"docs":{},"的":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"：":{"docs":{},"“":{"docs":{},"对":{"docs":{},"于":{"docs":{},"有":{"docs":{},"根":{"docs":{},"树":{"docs":{"part3/236. 二叉树的最近公共祖先.html":{"ref":"part3/236. 二叉树的最近公共祖先.html","tf":0.007407407407407408}}}}}}}}}}}}}}}}}}}}}}}},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"说":{"docs":{},"，":{"docs":{},"这":{"docs":{},"个":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"答":{"docs":{},"案":{"docs":{},"肯":{"docs":{},"定":{"docs":{},"在":{"1":{"docs":{},"到":{"docs":{},"n":{"docs":{},"之":{"docs":{},"间":{"docs":{},"。":{"docs":{},"既":{"docs":{},"然":{"docs":{},"答":{"docs":{},"案":{"docs":{},"的":{"docs":{},"范":{"docs":{},"围":{"docs":{},"确":{"docs":{},"定":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"通":{"docs":{},"过":{"docs":{},"二":{"docs":{},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"对":{"docs":{},"答":{"docs":{},"案":{"docs":{},"范":{"docs":{},"围":{"docs":{},"进":{"docs":{},"行":{"docs":{},"二":{"docs":{},"分":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"些":{"docs":{},"判":{"docs":{},"断":{"docs":{},"不":{"docs":{},"断":{"docs":{},"缩":{"docs":{},"小":{"docs":{},"答":{"docs":{},"案":{"docs":{},"范":{"docs":{},"围":{"docs":{},"，":{"docs":{},"最":{"docs":{},"后":{"docs":{},"答":{"docs":{},"案":{"docs":{},"范":{"docs":{},"围":{"docs":{},"为":{"1":{"docs":{},"后":{"docs":{},"就":{"docs":{},"可":{"docs":{},"以":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"了":{"docs":{},"。":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"那":{"docs":{},"么":{"docs":{},"我":{"docs":{},"们":{"docs":{},"接":{"docs":{},"着":{"docs":{},"分":{"docs":{},"析":{"docs":{},"题":{"docs":{},"目":{"docs":{},"：":{"docs":{},"给":{"docs":{},"定":{"docs":{},"一":{"docs":{},"个":{"docs":{},"包":{"docs":{},"含":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}},"重":{"docs":{},"点":{"docs":{},"就":{"docs":{},"是":{"docs":{},"进":{"docs":{},"行":{"docs":{},"怎":{"docs":{},"样":{"docs":{},"的":{"docs":{},"判":{"docs":{},"断":{"docs":{},"了":{"docs":{},"：":{"docs":{},"我":{"docs":{},"们":{"docs":{},"思":{"docs":{},"考":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"假":{"docs":{},"设":{"docs":{},"最":{"docs":{},"终":{"docs":{},"答":{"docs":{},"案":{"docs":{},"x":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"2":{"docs":{},"次":{"docs":{},"，":{"docs":{},"且":{"docs":{},"x":{"docs":{},"在":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"中":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"[":{"1":{"docs":{},",":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{},"的":{"docs":{},"个":{"docs":{},"数":{"docs":{},"一":{"docs":{},"定":{"docs":{},"为":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"首":{"docs":{},"先":{"docs":{},"分":{"docs":{},"析":{"docs":{},"一":{"docs":{},"下":{"docs":{},"说":{"docs":{},"明":{"docs":{},"的":{"docs":{},"要":{"docs":{},"求":{"docs":{},"：":{"docs":{"part3/287. 寻找重复数.html":{"ref":"part3/287. 寻找重复数.html","tf":0.007751937984496124}}}}}}}}}}}},"是":{"docs":{},"想":{"docs":{},"到":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"的":{"docs":{},"思":{"docs":{},"路":{"docs":{},"，":{"docs":{},"两":{"docs":{},"层":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"枚":{"docs":{},"举":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"和":{"docs":{},"是":{"docs":{},"否":{"docs":{},"等":{"docs":{},"于":{"docs":{},"k":{"docs":{},"。":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"^":{"2":{"docs":{},")":{"docs":{},"。":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.013605442176870748}}},"与":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}},"使":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}},"其":{"docs":{},"实":{"docs":{},"没":{"docs":{},"有":{"docs":{},"必":{"docs":{},"要":{"docs":{},"提":{"docs":{},"前":{"docs":{},"建":{"docs":{},"立":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"一":{"docs":{},"趟":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"循":{"docs":{},"环":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"也":{"docs":{},"可":{"docs":{},"以":{"docs":{},"解":{"docs":{},"决":{"docs":{},"问":{"docs":{},"题":{"docs":{},"。":{"docs":{},"代":{"docs":{},"码":{"docs":{},"如":{"docs":{},"下":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"数":{"docs":{},"组":{"docs":{},"为":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}},"我":{"docs":{},"们":{"docs":{},"只":{"docs":{},"要":{"docs":{},"从":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},"[":{"docs":{},"j":{"docs":{"part6/560. 和为K的子数组.html":{"ref":"part6/560. 和为K的子数组.html","tf":0.006802721088435374}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"开":{"docs":{},"始":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},")":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"结":{"docs":{},"束":{"docs":{},"(":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},")":{"docs":{},"为":{"1":{"docs":{},"，":{"docs":{},"通":{"docs":{},"过":{"docs":{},"等":{"docs":{},"差":{"docs":{},"数":{"docs":{},"列":{"docs":{},"求":{"docs":{},"和":{"docs":{},"公":{"docs":{},"式":{"docs":{},"可":{"docs":{},"以":{"docs":{},"求":{"docs":{},"得":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"与":{"docs":{},"目":{"docs":{},"标":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"进":{"docs":{},"行":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"等":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"则":{"docs":{},"创":{"docs":{},"建":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"保":{"docs":{},"存":{"docs":{},"答":{"docs":{},"案":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"小":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"应":{"docs":{},"该":{"docs":{},"扩":{"docs":{},"大":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"则":{"docs":{},"增":{"docs":{},"加":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"大":{"docs":{},"于":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"，":{"docs":{},"则":{"docs":{},"说":{"docs":{},"明":{"docs":{},"应":{"docs":{},"该":{"docs":{},"减":{"docs":{},"少":{"docs":{},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"的":{"docs":{},"和":{"docs":{},"，":{"docs":{},"则":{"docs":{},"增":{"docs":{},"加":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},"。":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}},"docs":{}}}}}}}}}}}},"docs":{}}}}}}}}}},"化":{"docs":{},"简":{"docs":{},"得":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}},"小":{"docs":{},"明":{"docs":{},"很":{"docs":{},"喜":{"docs":{},"欢":{"docs":{},"数":{"docs":{},"学":{"docs":{},",":{"docs":{},"有":{"docs":{},"一":{"docs":{},"天":{"docs":{},"他":{"docs":{},"在":{"docs":{},"做":{"docs":{},"数":{"docs":{},"学":{"docs":{},"作":{"docs":{},"业":{"docs":{},"时":{"docs":{},",":{"docs":{},"要":{"docs":{},"求":{"docs":{},"计":{"docs":{},"算":{"docs":{},"出":{"9":{"docs":{},"~":{"1":{"6":{"docs":{},"的":{"docs":{},"和":{"docs":{},",":{"docs":{},"他":{"docs":{},"马":{"docs":{},"上":{"docs":{},"就":{"docs":{},"写":{"docs":{},"出":{"docs":{},"了":{"docs":{},"正":{"docs":{},"确":{"docs":{},"答":{"docs":{},"案":{"docs":{},"是":{"1":{"0":{"0":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"他":{"docs":{},"并":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"于":{"docs":{},"此":{"docs":{},",":{"docs":{},"他":{"docs":{},"在":{"docs":{},"想":{"docs":{},"究":{"docs":{},"竟":{"docs":{},"有":{"docs":{},"多":{"docs":{},"少":{"docs":{},"种":{"docs":{},"连":{"docs":{},"续":{"docs":{},"的":{"docs":{},"正":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"和":{"docs":{},"为":{"1":{"0":{"0":{"docs":{},"(":{"docs":{},"至":{"docs":{},"少":{"docs":{},"包":{"docs":{},"括":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},")":{"docs":{},"。":{"docs":{},"没":{"docs":{},"多":{"docs":{},"久":{"docs":{},",":{"docs":{},"他":{"docs":{},"就":{"docs":{},"得":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"组":{"docs":{},"连":{"docs":{},"续":{"docs":{},"正":{"docs":{},"数":{"docs":{},"和":{"docs":{},"为":{"1":{"0":{"0":{"docs":{},"的":{"docs":{},"序":{"docs":{},"列":{"docs":{},":":{"1":{"8":{"docs":{},",":{"1":{"9":{"docs":{},",":{"2":{"0":{"docs":{},",":{"2":{"1":{"docs":{},",":{"2":{"2":{"docs":{},"。":{"docs":{},"现":{"docs":{},"在":{"docs":{},"把":{"docs":{},"问":{"docs":{},"题":{"docs":{},"交":{"docs":{},"给":{"docs":{},"你":{"docs":{},",":{"docs":{},"你":{"docs":{},"能":{"docs":{},"不":{"docs":{},"能":{"docs":{},"也":{"docs":{},"很":{"docs":{},"快":{"docs":{},"的":{"docs":{},"找":{"docs":{},"出":{"docs":{},"所":{"docs":{},"有":{"docs":{},"和":{"docs":{},"为":{"docs":{},"s":{"docs":{},"的":{"docs":{},"连":{"docs":{},"续":{"docs":{},"正":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"?":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"求":{"docs":{},"和":{"docs":{},"公":{"docs":{},"式":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}},"滑":{"docs":{},"动":{"docs":{},"窗":{"docs":{},"口":{"docs":{},"(":{"docs":{},"双":{"docs":{},"指":{"docs":{},"针":{"docs":{},")":{"2":{"docs":{},".":{"2":{"docs":{},".":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}},"docs":{}}},"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.0070921985815602835}}}}}}}}}}},"通":{"docs":{},"过":{"docs":{},"求":{"docs":{},"和":{"docs":{},"公":{"docs":{},"式":{"docs":{},"来":{"docs":{},"解":{"docs":{"others/和为S的连续正数序列.html":{"ref":"others/和为S的连续正数序列.html","tf":0.014184397163120567}}}}}}}}}}},"length":919},"corpusTokens":["!=","\"\";","#","%","&&","(!map.containskey(key))","(!stack.isempty())","();","(2","(a1","(f1","(flag)","(getkth(nums1,","(head","(index1","(index2","(int","(int[]","(j","(judge(nums,mid))","(k","(key)","(l1","(l2","(left","(list.siz","(list.size()","(map.containskey(key))","(n","(numcours","(re","(root","(s.length()","(sum","(true)","(最近最少使用)","*","*/","+","+=",",","/","/*","//pre用于完成对反转后链表的连接，默认先指向head，考虑整个链表都不反转的情况","//res用于最后返回","//剪枝一下","//右子树是否包含p,q中的一个","//因为sum[i]","//如果root为null，直接返回fals","//如果root为p或者q,只需要root的左右子树中有一个包含p或q即可","//如果root节点等于p或q，或者它的左右子树包含过p或q，就返回true，否则返回fals","//寻找root的左右节点或者root本身是否包含p,q","//左子树是否包含p,q中的一个","//建立sum数组","//开始找k个节点后的尾节点","//当(left","//所以需要给sum数组前添加一个元素0，确保可以判断到nums[0]","//特判","//第一个为true的root节点即为结果，通过一个全局变量存储。","/=","0","0)","0,","0.5;","0.75f,","0;","1","1)","1));","1);","1,","1,end1,nums2,start2,end2,k","1,end2,k","1.","10);","100","1000,","1000]","1000。","101","10;","136.","146.","1;","1;//滑动窗口[left,right]的和","1]","1e7,","1e7]。","1。","1（因为[1,mid]一共有mid个数，而其中x出现了2次，所以是mid+1个数）。所以如果nums数组中，元素值在[1,mid]之间的个数小于等于mid，那么[left,mid]中一定不存在最终的答案，我们要从[mid","1，right]中寻找答案。同理反之从[left,mid]中寻找答案。所以judge函数如下：","2","2)","2.","2.1.","2.2.","20,000]。","200","201","206.","210.","236.","25.","287.","2;","3","3.","300","4.","5","5.","501","560.","600",":",";","=","==",">",">1",">2",">3",">4",">5",">=",">null","?","@overrid","[","[0,1]","[1,","[1,0,2,0,0,0,1],","[1,1,1],","[1,1,3,3,3,3,4]","[1,1]","a1","a1;","addfirst(nod","addtwonumbers(listnod","an","arr,","arr[0]","arr[]","arraylist<>();","boolean","capacity)","capacity;","class","cnt","competit","count","dfs(root,","dfs(root.left,","dfs(root.right,p,","dfs(treenod","doubl","dp(i,j)表示字符串s(i,j)是否为回文串。","eldest)","end","end1","end1,","end2","end2,","end;","extend","f1","f2","f2);","f2;","f3","false;","findcontinuoussequence(int","findduplicate(int[]","findmediansortedarrays(int[]","findorder(int","flag","flag;","for(int","get(int","get(key)","getkth(int[]","getkth(nums1,","getkth(nums1,index1","getkth(nums1,start1,end1,nums2,index2","getkth(nums2,start2,end2,nums1,start1,end1,k);","get操作如果要达到o(1)的时间复杂度还是比较简单的，只需要通过map数据结构存储，可以通过查找key在o(1)时间复杂度里找到对应的value。","good","hash","hash[s.charat(i)]","hashmap<>();","head","head)","head,","head.next","head.next.prev","head.next;","head;","if(head","if(len1","if(nums1[index1]","ii","indegre","indegrees[p[0]]++;","index2","int","int[0];","int[128];","int[]","int[][]","int[n];","int[numcourses];","j","j)","judge(int[]","k","k)","k;","key)","key,","key;","k即可确保nums[j","k，你需要找到该数组中和为","l1","l1,","l1.next;","l1.val;","l2","l2)","l2.next;","l2.val;","leetcod","left","left)","left++;","left;","len1","len2","len2)","lengthoflongestsubstring(str","linkedhashmap{","linkedlist","linkedlist<>","linkedlist<>();","list","list.addfirst(node);","list.remove(node);","list;","listnod","listnode(","listnode(flag);","listnode(v","longestpalindrome(str","lowestcommonancestor(treenod","lru","lrucach","lrucache(int","lru缓存机制","luck!","m","map","map.get(key);","map.put(0,1);","map.put(key,","map.put(key,node);","map.remove(list.removelast().key);","map;","maxlength","mid","mid;","n","n)","n))。","n);","n++)","n;","new","next","next.prev","next;","node","node()","node();","node(int","node(key,","node)","node);","node.next","node.next;","node.prev","node.prev;","node.valu","node.value;","node;","nodelist","nodelist()","nodelist();","null","null)","null;","num","numcourses,","nums)","nums,","nums.length","nums.length;","nums1","nums1,","nums1.length;","nums2","nums2)","nums2,","nums2.length;","nums2[index2])","nums2。","nums[i]","nums[i]即可。如果存在，直接返回，不存在则往hash表中put进nums[i]，表示之前已经出现过值为nums[i]的数。","nums[i]的和为k","nums[j]","nums，其数字都在","n）。","n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。","o(1)","o(log(m","o(n2)","other","p","p,","pre","pre.next","pre.next;","pre;","prerequisites)","prev","prev,","prev.next","prev;","privat","protect","public","put","put(int","put(key,","put操作面临的主要问题是，如果只使用map数据结构存储，当缓存容量达到上限后，不容易删除最久未使用的数据。如果此时能维护一个类似于优先队列的数据结构，把队列中最久未使用的数据删除就比较容易了。","p、q","p、q，最近公共祖先表示为一个结点","q","q)","q);","queue","re","remove(nod","remove(node);","removeeldestentry(map.entri","removelast()","res;","ret","ret;","return","reverse(head);","reverse(head.next);","reverse(listnod","reversekgroup(listnod","reversekgroup(pre,ans);","reverselist(listnod","right","right))","right;","root","root,","root.next","root.next;","root;","root为p或q,它的左右子树中的一个为另一个节点。","root的左右子树分别包含p,q。","s","s)","s.charat(j)为止。返回这个过程中滑动窗口的最大长度即为答案。","s.length();","singlenumber(int[]","size","size()","size++;","size;","solut","stack","stack.add(pre);","stack.pop();","stack<>();","start","start1","start1,","start2","start2,","str.substring(i","string","subarraysum(int[]","sum","sum[j]","super(capacity,","super.getordefault(key,","super.put(key,","s，找到","t","tail","tail.prev","tail.prev;","tail;","target","target)","target。但时间复杂度为o(n^2)。","target已知，此时只要遍历a1或者遍历n，都可求得另一个的值，只要判断是否为正整数就可以判断是否存在答案。","target，请你在该数组中找出和为目标值的那","this.capac","this.key","this.valu","treenod","true);","twosum(int[]","val","value)","value);","value;","void","x","x，满足","{","||","}","。","。别想暴力解决这个问题！","一位","不会同时为空。","不能更改原数组（假设数组是只读的）。","不能更改原数组（假设数组是只读的）。也就是说不能通过类似排序的方式解决这个问题","与","两个","两数之和","两数相加","个一组翻转链表","个整数的数组","个节点一组进行翻转，请你返回翻转后的链表。","中心扩展法","中最长的回文子串。你可以假设","为不同节点且均存在于给定的二叉树中。","为两种不同的情况。","之外，这两个数都不会以","之间（包括","也就是说，这个题目的答案肯定在1到n之间。既然答案的范围确定，我们是否可以通过二分查找的方法对答案范围进行二分搜索，然后进行一些判断不断缩小答案范围，最后答案范围为1后就可以返回结果了。","二叉树的最近公共祖先","从3月初开始刷leetcode，刷了有200+题，但一直没有总结题解。有时候刷题的过程中有些思想明明以前用到过，但就是想不起来，看来还是要总结题解的。","但以上解法还不是最优解法，本题还可以通过快慢指针解决，以后有时间再补。","但我们可以通过建立hash表，当读取到一个数nums[i]时，我们判断hash表里是否存在target","但是啊，如果看一眼这个说明..这个题目还是很麻烦的。","但是啊，这样写在leetcode的执行用时还是比较大的...后来知道了，java中有一个linkedhashmap的数据结构可以很方便的解决这个问题。linkedhashmap里面的结点自带一个前驱指针和后继指针，维护了一个链表。","但这样复杂度太大了，然后想到处理子数组和时最常用的方法是建立一个前缀和数组sum。那么怎么利用这个前缀和数组优化复杂度呢？首先看一个样例","你不能只是单纯的改变节点内部的值，而是需要实际进行节点交换。","你可以不使用额外空间来实现吗？","你可以假设","你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。","你可以迭代或递归地反转链表。你能否用两种方法解决这道题？","你是否可以在","你的算法只能使用常数的额外空间。","你的算法应该具有线性时间复杂度。","使sum[i]","例如，想要学习课程","其实没有必要提前建立sum数组，一趟for循环遍历也可以解决问题。代码如下","写入数据","写题解的主要目的是方便自己以后再次查看和复习，所以题解的只是以自己能理解这个题为标准，如果有幸能帮助到你，那么就更好了。","初始滑动窗口大小为1，开始(left)为1，结束(right)为1，通过等差数列求和公式可以求得滑动窗口的和，与目标target进行比较，如果等于target，则创建一个数组保存答案，如果小于target则说明应该扩大滑动窗口的和，则增加right，如果大于target，则说明应该减少滑动窗口的和，则增加left。","判断是否存在重复字符可以用hash表的方式判断，即当前字符是否在hash表中出现过，同时当i往前移动时也要更新好hash表即可。因为i，j都不会回退，最大为n，算法整体复杂度为o(n)。","利用数组的特性，异或操作解决这个问题。","到","动态规划","动态规划2.2.","化简得","反转一个单链表。","反转链表","只出现一次的数字","只能使用额外的","可能会有多个正确的顺序，你只要返回一种就可以了。如果不可能完成所有课程，返回一个空数组。","和","和一个目标值","和为k。也就是说这个题转换成了在sum数组中找出两数之差为k的情况。和leetcode_1类似，通过建立hash表的方式可以o(n)时间复杂度解决这个问题。","和为k的子数组","和为s的连续正数序列","在选修某些课程之前需要一些先修课程。","基本的链表操作，遍历链表，处理好进位问题就好了。注意循环的退出条件，以及最后也要对flag进行判断。","如果一个节点是这两个节点的最近公共祖先，那么这两个节点一定分别存在于它们最近公共祖先的左右子树里面。或者p，q这两个节点中一定有一个是它们的最近公共祖先。","如果不借助额外空间，我们需要单独实现一个函数，能够以o(1)的空间复杂度完成反转，也是一个基本的链表操作，可以参考leetcode206题。emmmm总的来说还是基本的链表操作，难度都不大，但整合到一块就难了，细节上要注意好，代码如下：","如果不考虑空间复杂度，则可以利用栈+递归轻松完成反转:","如果密钥","如果密钥已经存在，则变更其数据值；如果密钥不存在，则插入该组「密钥/数据值」。当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值，从而为新的数据值留出空间。","如果我假装看不见说明的话&#x1f643;，那么建立一个hash表轻松解决这个问题。","如果节点总数不是","如果选择遍历a1，在求n的过程中要用到sqrt，如果遍历n,则不需要，所以选择遍历n。","如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。","存在于缓存中，则获取密钥的值（总是正数），否则返回","对应的sum数组为","寻找两个正序数组的中位数","寻找重复数","小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为s的连续正数序列?","开头。","当","思路","思路2.1.","您可以假设除了数字","我们只要从sum数组中，找出两个数","所以最后采用的是hashmap+linkedlist来存储数据，put操作时，把数据存储到hashmap和linkedlist中，其中linkedlist存储到链表头部，如果要删除最久未使用数据时，则删除链表尾部的数据即可。get操作直接从hashmap中取数据，然后更新链表中对应数据的顺序即可。","所有节点的值都是唯一的。","找到该树中两个指定节点的最近公共祖先。","数字。","数组中元素的范围是","数组中只有一个重复的数字，但它可能不止重复出现一次。","数组中只有一个重复的数字，但它可能不止重复出现一次。这个倒无所谓...","数组的长度为","整数，并返回他们的数组下标。","无重复字符的最长子串","时间复杂度内完成这两种操作？","时间复杂度小于","时，应当返回:","是","是一个正整数，它的值小于或等于链表的长度。","最后，还有一个参考了大佬的代码后手写的lru算法...直接看代码吧","最简单的想法是通过两个for循环遍历数组，判断nums[i]","最终判断为true的标准为","最长回文子串","最长子串","求和公式","滑动窗口(双指针)","滑动窗口(双指针)2.2.","现在你总共有","百度百科中最近公共祖先的定义为：“对于有根树","的两个结点","的整数倍，那么请将最后剩余的节点保持原有顺序。","的方式存储的，并且它们的每个节点只能存储","的最大长度为","的正序（从小到大）数组","的深度尽可能大（一个节点也可以是它自己的祖先）。”","的祖先且","的空间。","的空间。不能用hash表了！","的范围是","的连续的子数组的个数。","的链表用来表示两个非负的整数。其中，它们各自的位数是按照","的长度。","示例","示例:","示例：","给你一个链表，每","给你这个链表：1","给出两个","给定一个二叉树,","给定一个包含","给定一个字符串","给定一个字符串，请你找出其中不含有重复字符的","给定一个整数数组","给定一个整数数组和一个整数","给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。","给定两个大小为","给定课程总量以及它们的先决条件，返回你为了学完所有课程所安排的学习顺序。","维护一个滑动窗口[i,j]，如果[i,j]中不存在重复字符，则j++，如果存在重复字符，则重复字符一定为s.charat(j),则i++一直到s.charat(i)","缓存机制。它应该支持以下操作：","获取数据","菜鸡刷题日记","表示nums[j","说明","说明:","说明：","请你找出这两个正序数组的中位数，并且要求算法的时间复杂度为","课程表","转换成一个拓扑排序的问题，维护一个入度表，每次把入度为0的节点推入队列，加入结果数组，然后维护入度表剩余节点的入度。","输入:","输入:num","输出:","运用你所掌握的数据结构，设计和实现一个","这个题目简直是我刷题以来的噩梦，作为leetcode的第4个题目，这难度是要劝退刚刚刷题的萌新(我)啊！当初自己想不出最优解，看了一眼题解后还是不明白，深入研究了一会勉强理解了题解，但自己写代码还是写不出来，要处理的细节太多了，对着别人的代码磕磕绊绊的写完了。如今自己写题解...还是不会啊！刷leetcode以来最有阴影的题目！这题以后有时间再补题解吧，就贴个代码先。","进阶:","迭代写法：","迭代写法：2.2.","逆序","递归写法：","通过求和公式来解","那么我们接着分析题目：给定一个包含","那么重点就是进行怎样的判断了：我们思考一下，假设最终答案x出现了2次，且x在[1,mid]中，那么[1,mid]的个数一定为mid","门课需要选，记为","非空","题目描述","题目描述2.","首先分析一下说明的要求：","首先是想到暴力的思路，两层for循环遍历，枚举每一个子数组和是否等于k。时间复杂度为o(n^2)。","，且整数","，你需要先完成课程","，我们用一个匹配来表示他们:"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"菜鸡刷题日记","keywords":"","body":"菜鸡刷题日记\n从3月初开始刷LeetCode，刷了有200+题，但一直没有总结题解。有时候刷题的过程中有些思想明明以前用到过，但就是想不起来，看来还是要总结题解的。\n写题解的主要目的是方便自己以后再次查看和复习，所以题解的只是以自己能理解这个题为标准，如果有幸能帮助到你，那么就更好了。\n"},"part1/":{"url":"part1/","title":"LeetCode 1 - 100","keywords":"","body":"#\n"},"part1/1. 两数之和.html":{"url":"part1/1. 两数之和.html","title":"1. 两数之和","keywords":"","body":"1. 题目描述\n给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。\n2. 思路\n最简单的想法是通过两个for循环遍历数组，判断nums[i] + nums[j] == target。但时间复杂度为O(n^2)。\nfor(int i = 0; i \n但我们可以通过建立hash表，当读取到一个数nums[i]时，我们判断hash表里是否存在target - nums[i]即可。如果存在，直接返回，不存在则往hash表中put进nums[i]，表示之前已经出现过值为nums[i]的数。\npublic int[] twoSum(int[] nums, int target) {\n    int n = nums.length;\n    Map map = new HashMap<>();\n    for (int i = 0; i \n1. 题目描述2. 思路"},"part1/2. 两数相加.html":{"url":"part1/2. 两数相加.html","title":"2. 两数相加","keywords":"","body":"1. 题目描述\n给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。\n如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。\n您可以假设除了数字 0 之外，这两个数都不会以 0 开头。\n2. 思路\n基本的链表操作，遍历链表，处理好进位问题就好了。注意循环的退出条件，以及最后也要对flag进行判断。\npublic ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n    ListNode head = new ListNode(-1);\n    ListNode pre = head;\n    int flag = 0;\n    while (l1 != null || l2 != null) {\n        int val = flag;\n        if (l1 != null) {\n            val += l1.val;\n            l1 = l1.next;\n        }\n        if (l2 != null) {\n            val += l2.val;\n            l2 = l2.next;\n        }\n        flag = val / 10;\n        pre.next = new ListNode(val % 10);\n        pre = pre.next;\n    }\n    pre.next = flag == 0 ? null : new ListNode(flag);\n    return head.next;\n}\n\n1. 题目描述2. 思路"},"part1/3. 无重复字符的最长子串.html":{"url":"part1/3. 无重复字符的最长子串.html","title":"3. 无重复字符的最长子串","keywords":"","body":"1. 题目描述\n给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。\n2. 思路\n维护一个滑动窗口[i,j]，如果[i,j]中不存在重复字符，则j++，如果存在重复字符，则重复字符一定为s.charAt(j),则i++一直到s.charAt(i) == s.charAt(j)为止。返回这个过程中滑动窗口的最大长度即为答案。\n判断是否存在重复字符可以用hash表的方式判断，即当前字符是否在hash表中出现过，同时当i往前移动时也要更新好hash表即可。因为i，j都不会回退，最大为n，算法整体复杂度为O(n)。\npublic int lengthOfLongestSubstring(String s) {\n    if (s.length() == 0) {\n        return 0;\n    }\n    int i = 0;\n    int j = 1;\n    int count = 0;\n    int[] hash = new int[128];\n    hash[s.charAt(i)] = 1;\n    while (j \n1. 题目描述2. 思路"},"part1/4. 寻找两个正序数组的中位数.html":{"url":"part1/4. 寻找两个正序数组的中位数.html","title":"4. 寻找两个正序数组的中位数","keywords":"","body":"1. 题目描述\n给定两个大小为 m 和 n 的正序（从小到大）数组 nums1 和 nums2。\n请你找出这两个正序数组的中位数，并且要求算法的时间复杂度为  O(log(m + n))。\n你可以假设 nums1 和 nums2 不会同时为空。\n2. 思路\n这个题目简直是我刷题以来的噩梦，作为LeetCode的第4个题目，这难度是要劝退刚刚刷题的萌新(我)啊！当初自己想不出最优解，看了一眼题解后还是不明白，深入研究了一会勉强理解了题解，但自己写代码还是写不出来，要处理的细节太多了，对着别人的代码磕磕绊绊的写完了。如今自己写题解...还是不会啊！刷LeetCode以来最有阴影的题目！这题以后有时间再补题解吧，就贴个代码先。\npublic double findMedianSortedArrays(int[] nums1, int[] nums2) {\n    int n = nums1.length;\n    int m = nums2.length;\n    int left = (n + m + 1) / 2;\n    int right = (n + m + 2) / 2;\n    return (getKth(nums1, 0, n - 1, nums2, 0, m - 1, left) + getKth(nums1, 0, n - 1, nums2, 0, m - 1, right)) * 0.5;\n}\n\nprivate int getKth(int[] nums1, int start1, int end1, int[] nums2, int start2, int end2, int k) {\n    int len1 = end1 - start1 + 1;\n    int len2 = end2 - start2 + 1;\n    if(len1 > len2) {\n        return getKth(nums2,start2,end2,nums1,start1,end1,k);\n    }\n    if(len1  end1 ? end1 : start1 + k / 2 - 1;\n    int index2 = start2 + k / 2 - 1 > end2 ? end2 : start2 + k / 2 - 1;\n    if(nums1[index1] > nums2[index2]) {\n        return getKth(nums1,start1,end1,nums2,index2 + 1,end2,k - (index2 - start2 + 1));\n    } else {\n        return getKth(nums1,index1 + 1,end1,nums2,start2,end2,k - (index1 - start1 + 1));\n    }\n}\n\n1. 题目描述2. 思路"},"part1/5. 最长回文子串.html":{"url":"part1/5. 最长回文子串.html","title":"5. 最长回文子串","keywords":"","body":"1. 题目描述\n给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。\n2. 思路\n2.1. 动态规划\ndp(i,j)表示字符串s(i,j)是否为回文串。\npublic String longestPalindrome(String s) {\n    int n = s.length();\n    if (n \n2.2. 中心扩展法\npublic String longestPalindrome(String s) {\n    if (s.length() = 0 && j  maxLength ? str.substring(i + 1, j) : \"\";\n}\n\n1. 题目描述2. 思路2.1. 动态规划2.2. 中心扩展法"},"part1/25. K 个一组翻转链表.html":{"url":"part1/25. K 个一组翻转链表.html","title":"25. K 个一组翻转链表","keywords":"","body":"1. 题目描述\n给你一个链表，每 k 个节点一组进行翻转，请你返回翻转后的链表。\nk 是一个正整数，它的值小于或等于链表的长度。\n如果节点总数不是 k 的整数倍，那么请将最后剩余的节点保持原有顺序。\n示例：\n\n给你这个链表：1->2->3->4->5\n当 k = 2 时，应当返回: 2->1->4->3->5\n当 k = 3 时，应当返回: 3->2->1->4->5\n\n说明：\n\n你的算法只能使用常数的额外空间。\n\n你不能只是单纯的改变节点内部的值，而是需要实际进行节点交换。\n\n\n2. 思路\n如果不考虑空间复杂度，则可以利用栈+递归轻松完成反转:\npublic ListNode reverseKGroup(ListNode head, int k) {\n    int ans = k;\n    if (head == null) {\n        return null;\n    }\n    Stack stack = new Stack<>();\n    ListNode pre = head;\n    while (k != 0 && pre != null) {\n        stack.add(pre);\n        k--;\n        pre = pre.next;\n    }\n    if (k != 0) {\n        return head;\n    }\n    ListNode node = stack.pop();\n    ListNode ret = node;\n    while (!stack.isEmpty()) {\n        node.next = stack.pop();\n        node = node.next;\n    }\n    node.next = reverseKGroup(pre,ans);\n    return ret;\n}\n\n如果不借助额外空间，我们需要单独实现一个函数，能够以O(1)的空间复杂度完成反转，也是一个基本的链表操作，可以参考leetcode206题。emmmm总的来说还是基本的链表操作，难度都不大，但整合到一块就难了，细节上要注意好，代码如下：\npublic ListNode reverseKGroup(ListNode head, int k) {\n    //特判\n    if (head == null) {\n        return null;\n    }\n    //pre用于完成对反转后链表的连接，默认先指向head，考虑整个链表都不反转的情况\n    ListNode pre = new ListNode(-1);\n    pre.next = head;\n    //res用于最后返回\n    ListNode res = pre;\n    ListNode end = head;\n    while (true) {\n        ListNode start = end;\n        //开始找k个节点后的尾节点\n        for (int i = 1; i \n1. 题目描述2. 思路"},"part2/":{"url":"part2/","title":"LeetCode 101 - 200","keywords":"","body":""},"part2/136. 只出现一次的数字.html":{"url":"part2/136. 只出现一次的数字.html","title":"136. 只出现一次的数字","keywords":"","body":"1. 题目描述\n给定一个非空整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。\n说明：\n你的算法应该具有线性时间复杂度。 你可以不使用额外空间来实现吗？\n2. 思路\n利用数组的特性，异或操作解决这个问题。\npublic int singleNumber(int[] nums) {\n    int res = 0;\n    for (int i = 0; i \n1. 题目描述2. 思路"},"part2/146. LRU缓存机制.html":{"url":"part2/146. LRU缓存机制.html","title":"146. LRU缓存机制","keywords":"","body":"1. 题目描述\n运用你所掌握的数据结构，设计和实现一个  LRU (最近最少使用) 缓存机制。它应该支持以下操作： 获取数据 get 和 写入数据 put 。\n\n获取数据 get(key) - 如果密钥 (key) 存在于缓存中，则获取密钥的值（总是正数），否则返回 -1。\n写入数据 put(key, value) - 如果密钥已经存在，则变更其数据值；如果密钥不存在，则插入该组「密钥/数据值」。当缓存容量达到上限时，它应该在写入新数据之前删除最久未使用的数据值，从而为新的数据值留出空间。\n\n进阶:\n你是否可以在 O(1) 时间复杂度内完成这两种操作？\n2. 思路\nget操作如果要达到O(1)的时间复杂度还是比较简单的，只需要通过Map数据结构存储，可以通过查找key在O(1)时间复杂度里找到对应的value。\nput操作面临的主要问题是，如果只使用Map数据结构存储，当缓存容量达到上限后，不容易删除最久未使用的数据。如果此时能维护一个类似于优先队列的数据结构，把队列中最久未使用的数据删除就比较容易了。\n所以最后采用的是HashMap+LinkedList来存储数据，put操作时，把数据存储到HashMap和LinkedList中，其中LinkedList存储到链表头部，如果要删除最久未使用数据时，则删除链表尾部的数据即可。get操作直接从HashMap中取数据，然后更新链表中对应数据的顺序即可。\nclass Node {\n    int key;\n    int value;\n    public Node(int key, int value) {\n        this.key = key;\n        this.value = value;\n    }\n}\nclass LRUCache {\n    Map map;\n    LinkedList list;\n    int capacity;\n    public LRUCache(int capacity) {\n        list = new LinkedList<>();\n        map = new HashMap<>();\n        this.capacity = capacity;\n    }\n\n    public int get(int key) {\n        if (!map.containsKey(key)) {\n            return -1;\n        }\n        Node node = map.get(key);\n        list.remove(node);\n        list.addFirst(node);\n        return node.value;\n    }\n\n    public void put(int key, int value) {\n        if (map.containsKey(key)) {\n            Node node = map.get(key);\n            list.remove(node);\n            node.value = value;\n            list.addFirst(node);\n        } else {\n            if (list.size() >= capacity) {\n                map.remove(list.removeLast().key);\n            }\n            Node node = new Node(key, value);\n            map.put(key,node);\n            list.addFirst(node);\n        }\n    }\n}\n\n但是啊，这样写在LeetCode的执行用时还是比较大的...后来知道了，Java中有一个LinkedHashMap的数据结构可以很方便的解决这个问题。LinkedHashMap里面的结点自带一个前驱指针和后继指针，维护了一个链表。\nclass LRUCache extends LinkedHashMap{\n    private int capacity;\n\n    public LRUCache(int capacity) {\n        super(capacity, 0.75F, true);\n        this.capacity = capacity;\n    }\n\n    public int get(int key) {\n        return super.getOrDefault(key, -1);\n    }\n\n    public void put(int key, int value) {\n        super.put(key, value);\n    }\n\n    @Override\n    protected boolean removeEldestEntry(Map.Entry eldest) {\n        return size() > capacity; \n    }\n}\n\n最后，还有一个参考了大佬的代码后手写的LRU算法...直接看代码吧\nclass Node {\n    int key;\n    int value;\n    Node prev, next;\n\n    public Node() {\n    }\n\n    public Node(int key, int value) {\n        this.key = key;\n        this.value = value;\n    }\n}\n\nclass NodeList {\n    int size;\n    Node head;\n    Node tail;\n\n    public NodeList() {\n        head = new Node();\n        tail = new Node();\n        head.next = tail;\n        tail.prev = head;\n        size = 0;\n    }\n\n    public void addFirst(Node node) {\n        node.next = head.next;\n        node.prev = head;\n        head.next.prev = node;\n        head.next = node;\n        size++;\n    }\n\n    public void remove(Node node) {\n        Node prev = node.prev;\n        Node next = node.next;\n        prev.next = next;\n        next.prev = prev;\n        node.next = null;\n        node.prev = null;\n        size--;\n    }\n\n    public Node removeLast() {\n        Node node = tail.prev;\n        remove(node);\n        return node;\n    }\n}\n\nclass LRUCache {\n\n    Map map;\n    NodeList list;\n    int capacity;\n\n    public LRUCache(int capacity) {\n        this.capacity = capacity;\n        map = new HashMap<>();\n        list = new NodeList();\n    }\n\n    public int get(int key) {\n        if (!map.containsKey(key)) {\n            return -1;\n        }\n        Node node = map.get(key);\n        list.remove(node);\n        list.addFirst(node);\n        return node.value;\n    }\n\n    public void put(int key, int value) {\n        if (map.containsKey(key)) {\n            Node node = map.get(key);\n            list.remove(node);\n            node.value = value;\n            list.addFirst(node);\n        } else {\n            if (list.size >= capacity) {\n                map.remove(list.removeLast().key);\n            }\n            Node node = new Node(key, value);\n            list.addFirst(node);\n            map.put(key, node);\n        }\n    }\n}\n\n1. 题目描述2. 思路"},"part3/":{"url":"part3/","title":"LeetCode 201 - 300","keywords":"","body":"#\n"},"part3/206. 反转链表.html":{"url":"part3/206. 反转链表.html","title":"206. 反转链表","keywords":"","body":"1. 题目描述\n反转一个单链表。\n示例:\n\n输入: 1->2->3->4->5->NULL\n输出: 5->4->3->2->1->NULL\n\n进阶: \n你可以迭代或递归地反转链表。你能否用两种方法解决这道题？\n2. 思路\n2.1. 迭代写法：\npublic ListNode reverseList(ListNode head) {\n    ListNode pre = null;\n    ListNode root = head;\n    while (root != null) {\n        ListNode next = root.next;\n        root.next = pre;\n        pre = root;\n        root = next;\n    }\n    return pre;\n}\n\n2.2. 递归写法：\nprivate ListNode res;\npublic ListNode reverseList(ListNode head) {\n    reverse(head);\n    return res;\n}\n\nprivate ListNode reverse(ListNode head) {\n    if(head == null || head.next == null) {\n        res = head;\n        return head;\n    }\n    ListNode pre = reverse(head.next);\n    head.next = null;\n    pre.next = head;\n    return head;\n}\n\n1. 题目描述2. 思路2.1. 迭代写法：2.2. 递归写法："},"part3/210. 课程表 II.html":{"url":"part3/210. 课程表 II.html","title":"210. 课程表 II","keywords":"","body":"1. 题目描述\n现在你总共有 n 门课需要选，记为 0 到 n-1。\n在选修某些课程之前需要一些先修课程。 例如，想要学习课程 0 ，你需要先完成课程 1 ，我们用一个匹配来表示他们: [0,1]\n给定课程总量以及它们的先决条件，返回你为了学完所有课程所安排的学习顺序。\n可能会有多个正确的顺序，你只要返回一种就可以了。如果不可能完成所有课程，返回一个空数组。\n2. 思路\n转换成一个拓扑排序的问题，维护一个入度表，每次把入度为0的节点推入队列，加入结果数组，然后维护入度表剩余节点的入度。\npublic int[] findOrder(int numCourses, int[][] prerequisites) {\n    if (numCourses == 0) {\n        return new int[0];\n    }\n    int[] inDegrees = new int[numCourses];\n    for (int[] p : prerequisites) {\n        inDegrees[p[0]]++;\n    }\n    Queue queue = new LinkedList<> ();\n    for (int i = 0; i \n1. 题目描述2. 思路"},"part3/236. 二叉树的最近公共祖先.html":{"url":"part3/236. 二叉树的最近公共祖先.html","title":"236. 二叉树的最近公共祖先","keywords":"","body":"1. 题目描述\n给定一个二叉树, 找到该树中两个指定节点的最近公共祖先。\n百度百科中最近公共祖先的定义为：“对于有根树 T 的两个结点 p、q，最近公共祖先表示为一个结点 x，满足 x 是 p、q 的祖先且 x 的深度尽可能大（一个节点也可以是它自己的祖先）。”\n说明:\n\n所有节点的值都是唯一的。\np、q 为不同节点且均存在于给定的二叉树中。\n\n2. 思路\n如果一个节点是这两个节点的最近公共祖先，那么这两个节点一定分别存在于它们最近公共祖先的左右子树里面。或者p，q这两个节点中一定有一个是它们的最近公共祖先。\nprivate TreeNode res = null;\npublic TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n    dfs(root, p, q);\n    return res;\n}\n\n//寻找root的左右节点或者root本身是否包含p,q\nprivate boolean dfs(TreeNode root, TreeNode p, TreeNode q) {\n    //剪枝一下\n    if (res != null) {\n        return false;\n    }\n    //如果root为null，直接返回false\n    if (root == null) {\n        return false;\n    }\n    //左子树是否包含p,q中的一个\n    boolean f1 = dfs(root.left, p, q);\n    //右子树是否包含p,q中的一个\n    boolean f2 = dfs(root.right,p, q);\n    //如果root为p或者q,只需要root的左右子树中有一个包含p或q即可\n    boolean f3 = (root == p || root == q) && (f1 || f2);\n    /*\n    最终判断为true的标准为\n    1. root为p或q,它的左右子树中的一个为另一个节点。\n    2. root的左右子树分别包含p,q。\n     */\n    boolean flag = f3 || (f1 && f2);\n    //第一个为true的root节点即为结果，通过一个全局变量存储。\n    if (flag) {\n        res = root;\n    }\n    //如果root节点等于p或q，或者它的左右子树包含过p或q，就返回true，否则返回false\n    return root == p || root == q || f1 || f2;\n}\n\n1. 题目描述2. 思路"},"part3/287. 寻找重复数.html":{"url":"part3/287. 寻找重复数.html","title":"287. 寻找重复数","keywords":"","body":"1. 题目描述\n给定一个包含 n + 1 个整数的数组 nums，其数字都在 1 到 n 之间（包括 1 和 n），可知至少存在一个重复的整数。假设只有一个重复的整数，找出这个重复的数。\n说明：\n\n不能更改原数组（假设数组是只读的）。\n只能使用额外的 O(1) 的空间。\n时间复杂度小于 O(n2) 。\n数组中只有一个重复的数字，但它可能不止重复出现一次。\n\n2. 思路\n如果我假装看不见说明的话&#x1F643;，那么建立一个Hash表轻松解决这个问题。\npublic int findDuplicate(int[] nums) {\n    Map map = new HashMap<>();\n    for (int i = 0; i \n但是啊，如果看一眼这个说明..这个题目还是很麻烦的。\n首先分析一下说明的要求：\n\n不能更改原数组（假设数组是只读的）。也就是说不能通过类似排序的方式解决这个问题\n只能使用额外的 O(1) 的空间。不能用Hash表了！\n时间复杂度小于 O(n2) 。别想暴力解决这个问题！\n数组中只有一个重复的数字，但它可能不止重复出现一次。这个倒无所谓...\n\n那么我们接着分析题目：给定一个包含 n + 1 个整数的数组 nums，其数字都在 1 到 n 之间（包括 1 和 n）。\n也就是说，这个题目的答案肯定在1到n之间。既然答案的范围确定，我们是否可以通过二分查找的方法对答案范围进行二分搜索，然后进行一些判断不断缩小答案范围，最后答案范围为1后就可以返回结果了。\npublic int findDuplicate(int[] nums) {\n        int n = nums.length - 1;\n        int left = 1;\n        int right = n;\n        int mid;\n        while (left > 1;\n            if (judge(nums,mid)) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        return right;\n    }\n\n那么重点就是进行怎样的判断了：我们思考一下，假设最终答案x出现了2次，且x在[1,mid]中，那么[1,mid]的个数一定为mid + 1（因为[1,mid]一共有mid个数，而其中x出现了2次，所以是mid+1个数）。所以如果nums数组中，元素值在[1,mid]之间的个数小于等于mid，那么[left,mid]中一定不存在最终的答案，我们要从[mid + 1，right]中寻找答案。同理反之从[left,mid]中寻找答案。所以judge函数如下：\nprivate boolean judge(int[] arr, int value) {\n    int ans = 0;\n    for (int i = 0; i \n2.1. 但以上解法还不是最优解法，本题还可以通过快慢指针解决，以后有时间再补。\n1. 题目描述2. 思路2.1. 但以上解法还不是最优解法，本题还可以通过快慢指针解决，以后有时间再补。"},"part6/":{"url":"part6/","title":"LeetCode 501 - 600","keywords":"","body":""},"part6/560. 和为K的子数组.html":{"url":"part6/560. 和为K的子数组.html","title":"560. 和为K的子数组","keywords":"","body":"1. 题目描述\n给定一个整数数组和一个整数 k，你需要找到该数组中和为 k 的连续的子数组的个数。\n示例 1 :\n\n输入:nums = [1,1,1], k = 2\n输出: 2 , [1,1] 与 [1,1] 为两种不同的情况。\n\n说明 :\n\n数组的长度为 [1, 20,000]。\n数组中元素的范围是 [-1000, 1000] ，且整数 k 的范围是 [-1e7, 1e7]。\n\n2. 思路\n首先是想到暴力的思路，两层for循环遍历，枚举每一个子数组和是否等于k。时间复杂度为O(n^2)。\nint n = nums.length;\nint cnt = 0;\nfor (int i = 0; i \n但这样复杂度太大了，然后想到处理子数组和时最常用的方法是建立一个前缀和数组sum。那么怎么利用这个前缀和数组优化复杂度呢？首先看一个样例\n\nnums = [1,0,2,0,0,0,1], k = 2 \n对应的sum数组为\n sum = [1,1,3,3,3,3,4]\n\n我们只要从sum数组中，找出两个数 i ,  j  使sum[i] - sum[j] = k即可确保nums[j + 1] 到 nums[i] 和为k。也就是说这个题转换成了在sum数组中找出两数之差为k的情况。和LeetCode_1类似，通过建立hash表的方式可以O(n)时间复杂度解决这个问题。\npublic int subarraySum(int[] nums, int k) {\n    int n = nums.length;\n    int res = 0;\n    int[] sum = new int[n];\n    //建立sum数组\n    for (int i = 0; i  map = new HashMap<>();\n    //因为sum[i] - sum[j] = k 表示nums[j + 1] - nums[i]的和为k\n    //所以需要给sum数组前添加一个元素0，确保可以判断到nums[0]\n    map.put(0,1);\n    for (int i = 0; i \n其实没有必要提前建立sum数组，一趟for循环遍历也可以解决问题。代码如下\npublic int subarraySum(int[] nums, int k) {\n    int n = nums.length;\n    int res = 0;\n    Map map = new HashMap<>();\n    map.put(0,1);\n    int sum = 0;\n    for (int i = 0; i \n1. 题目描述2. 思路"},"others/":{"url":"others/","title":"Others","keywords":"","body":"Others\n"},"others/和为S的连续正数序列.html":{"url":"others/和为S的连续正数序列.html","title":"和为S的连续正数序列","keywords":"","body":"1. 题目描述\n小明很喜欢数学,有一天他在做数学作业时,要求计算出9~16的和,他马上就写出了正确答案是100。但是他并不满足于此,他在想究竟有多少种连续的正数序列的和为100(至少包括两个数)。没多久,他就得到另一组连续正数和为100的序列:18,19,20,21,22。现在把问题交给你,你能不能也很快的找出所有和为S的连续正数序列? Good Luck!\n2. 思路\n2.1. 滑动窗口(双指针)\n初始滑动窗口大小为1，开始(left)为1，结束(right)为1，通过等差数列求和公式可以求得滑动窗口的和，与目标target进行比较，如果等于target，则创建一个数组保存答案，如果小于target则说明应该扩大滑动窗口的和，则增加right，如果大于target，则说明应该减少滑动窗口的和，则增加left。\nclass Solution {\n    public int[][] findContinuousSequence(int target) {\n        List res = new ArrayList<>();\n        int left = 1;\n        int right = 1;\n        int sum = 1;//滑动窗口[left,right]的和\n        //当(left  target) {\n                sum -= left;\n                left++;\n            } else if (sum \n2.2. 通过求和公式来解\n求和公式\n\n(a1 + a1 + n - 1) * n / 2 = target\n\n化简得\n\n2  a1  n + n  n - n = 2  target\n\ntarget已知，此时只要遍历a1或者遍历n，都可求得另一个的值，只要判断是否为正整数就可以判断是否存在答案。\n如果选择遍历a1，在求n的过程中要用到sqrt，如果遍历n,则不需要，所以选择遍历n。\nclass Solution {\n    public int[][] findContinuousSequence(int target) {\n        List list = new ArrayList<>();\n        for (int n = 2; 2 * target + n - n * n > 0; n++) {\n            int a1 = 2 * target + n - n * n;\n            if (a1 % (2 * n) == 0) {\n                a1 /= (2 * n);\n                int arr[] = new int[n];\n                arr[0] = a1;\n                for (int i = 1; i \n1. 题目描述2. 思路2.1. 滑动窗口(双指针)2.2. 通过求和公式来解"},"competition/":{"url":"competition/","title":"competition","keywords":"","body":"competition\n"}}}